{
    "configs": [
        {
            "Config": {
                "Id": "19",
                "Name": "ZM_ADD_JPEG_COMMENTS",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Add jpeg timestamp annotations as file header comments",
                "Help": " JPEG files may have a number of extra fields added to the file header. The comment field may have any kind of text added. This options allows you to have the same text that is used to annotate the image additionally included as a file header comment. If you archive event images to other locations this may help you locate images for particular events or times if you use software that can read comment headers. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "129",
                "Name": "ZM_AUDIT_CHECK_INTERVAL",
                "Value": "900",
                "Type": "integer",
                "DefaultValue": "900",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often to check database and filesystem consistency",
                "Help": " The zmaudit daemon exists to check that the saved information in the database and on the filesystem match and are consistent with each other. If an error occurs or if you are using 'fast deletes' it may be that database records are deleted but files remain. In this case, and similar, zmaudit will remove redundant information to synchronise the two data stores. The default check interval of 900 seconds (15 minutes) is fine for most systems however if you have a very large number of events the process of scanning the database and filesystem may take a long time and impact performance. In this case you may prefer to make this interval much larger to reduce the impact on your system. This option determines how often these checks are performed. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "130",
                "Name": "ZM_AUDIT_MIN_AGE",
                "Value": "86400",
                "Type": "integer",
                "DefaultValue": "86400",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "The minimum age in seconds event data must be in order to be deleted.",
                "Help": " The zmaudit daemon exists to check that the saved information in the database and on the filesystem match and are consistent with each other. Event files or db records that are younger than this setting will not be deleted and a warning will be given. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "7",
                "Name": "ZM_AUTH_HASH_IPS",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Include IP addresses in the authentication hash",
                "Help": " When ZoneMinder is running in hashed authenticated mode it can optionally include the requesting IP address in the resultant hash. This adds an extra level of security as only requests from that address may use that authentication key. However in some circumstances, such as access over mobile networks, the requesting address can change for each request which will cause most requests to fail. This option allows you to control whether IP addresses are included in the authentication hash on your system. If you experience intermitent problems with authentication, switching this option off may help. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": "ZM_OPT_USE_AUTH=1;ZM_AUTH_RELAY=hashed"
            }
        },
        {
            "Config": {
                "Id": "8",
                "Name": "ZM_AUTH_HASH_LOGINS",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Allow login by authentication hash",
                "Help": " The normal process for logging into ZoneMinder is via the login screen with username and password. In some circumstances it may be desirable to allow access directly to one or more pages, for instance from a third party application. If this option is enabled then adding an 'auth' parameter to any request will include a shortcut login bypassing the login screen, if not already logged in. As authentication hashes are time and, optionally, IP limited this can allow short-term access to ZoneMinder screens from other web pages etc. In order to use this the calling application will hae to generate the authentication hash itself and ensure it is valid. If you use this option you should ensure that you have modified the ZM_AUTH_HASH_SECRET to somethign unique to your system. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": "ZM_OPT_USE_AUTH=1;ZM_AUTH_RELAY=hashed"
            }
        },
        {
            "Config": {
                "Id": "6",
                "Name": "ZM_AUTH_HASH_SECRET",
                "Value": "dfadsf4",
                "Type": "string",
                "DefaultValue": "...Change me to something unique...",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Secret for encoding hashed authentication information",
                "Help": " When ZoneMinder is running in hashed authenticated mode it is necessary to generate hashed strings containing encrypted sensitive information such as usernames and password. Although these string are reasonably secure the addition of a random secret increases security substantially. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": "ZM_OPT_USE_AUTH=1;ZM_AUTH_RELAY=hashed"
            }
        },
        {
            "Config": {
                "Id": "5",
                "Name": "ZM_AUTH_RELAY",
                "Value": "hashed",
                "Type": "string",
                "DefaultValue": "hashed",
                "Hint": "hashed|plain|none",
                "Pattern": "(?^i:^([hpn]))",
                "Format": " ($1 =~ \/^h\/)\n                             ? \"hashed\"\n                             : ($1 =~ \/^p\/ ? \"plain\" : \"none\" )\n                           ",
                "Prompt": "Method used to relay authentication information",
                "Help": " When ZoneMinder is running in authenticated mode it can pass user details between the web pages and the back end processes. There are two methods for doing this. This first is to use a time limited hashed string which contains no direct username or password details, the second method is to pass the username and passwords around in plaintext. This method is not recommend except where you do not have the md5 libraries available on your system or you have a completely isolated system with no external access. You can also switch off authentication relaying if your system is isolated in other ways. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": "ZM_OPT_USE_AUTH=1"
            }
        },
        {
            "Config": {
                "Id": "4",
                "Name": "ZM_AUTH_TYPE",
                "Value": "builtin",
                "Type": "string",
                "DefaultValue": "builtin",
                "Hint": "builtin|remote",
                "Pattern": "(?^i:^([br]))",
                "Format": " $1 =~ \/^b\/ ? \"builtin\" : \"remote\" ",
                "Prompt": "What is used to authenticate ZoneMinder users",
                "Help": " ZoneMinder can use two methods to authenticate users when running in authenticated mode. The first is a builtin method where ZoneMinder provides facilities for users to log in and maintains track of their identity. The second method allows interworking with other methods such as http basic authentication which passes an independently authentication 'remote' user via http. In this case ZoneMinder would use the supplied user without additional authentication provided such a user is configured ion ZoneMinder. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": "ZM_OPT_USE_AUTH=1"
            }
        },
        {
            "Config": {
                "Id": "132",
                "Name": "ZM_BULK_FRAME_INTERVAL",
                "Value": "100",
                "Type": "integer",
                "DefaultValue": "100",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often a bulk frame should be written to the database",
                "Help": " Traditionally ZoneMinder writes an entry into the Frames database table for each frame that is captured and saved. This works well in motion detection scenarios but when in a DVR situation ('Record' or 'Mocord' mode) this results in a huge number of frame writes and a lot of database and disk bandwidth for very little additional information. Setting this to a non-zero value will enabled ZoneMinder to group these non-alarm frames into one 'bulk' frame entry which saves a lot of bandwidth and space. The only disadvantage of this is that timing information for individual frames is lost but in constant frame rate situations this is usually not significant. This setting is ignored in Modect mode and individual frames are still written if an alarm occurs in Mocord mode also. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "87",
                "Name": "ZM_CAPTURES_PER_FRAME",
                "Value": "1",
                "Type": "integer",
                "DefaultValue": "1",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How many images are captured per returned frame, for shared local cameras",
                "Help": " If you are using cameras attached to a video capture card which forces multiple inputs to share one capture chip, it can sometimes produce images with interlaced frames reversed resulting in poor image quality and a distinctive comb edge appearance. Increasing this setting allows you to force additional image captures before one is selected as the captured frame. This allows the capture hardware to 'settle down' and produce better quality images at the price of lesser capture rates. This option has no effect on (a) network cameras, or (b) where multiple inputs do not share a capture chip. This option addresses a similar problem to the ZM_V4L_MULTI_BUFFER option and you should normally change the value of only one of the options at a time.  If you have different capture cards that need different values you can ovveride them in each individual monitor on the source page. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "144",
                "Name": "ZM_CHECK_FOR_UPDATES",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Check with zoneminder.com for updated versions",
                "Help": " From ZoneMinder version 1.17.0 onwards new versions are expected to be more frequent. To save checking manually for each new version ZoneMinder can check with the zoneminder.com website to determine the most recent release. These checks are infrequent, about once per week, and no personal or system information is transmitted other than your current version number. If you do not wish these checks to take place or your ZoneMinder system has no internet access you can switch these check off with this configuration variable ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "18",
                "Name": "ZM_COLOUR_JPEG_FILES",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Colourise greyscale JPEG files",
                "Help": " Cameras that capture in greyscale can write their captured images to jpeg files with a corresponding greyscale colour space. This saves a small amount of disk space over colour ones. However some tools such as ffmpeg either fail to work with this colour space or have to convert it beforehand. Setting this option to yes uses up a little more space but makes creation of MPEG files much faster. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "32",
                "Name": "ZM_CPU_EXTENSIONS",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Use advanced CPU extensions to increase performance",
                "Help": " When advanced processor extensions such as SSE2 or SSSE3 are available, ZoneMinder can use them, which should increase performance and reduce system load. Enabling this option on processors that do not support the advanced processors extensions used by ZoneMinder is harmless and will have no effect. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "135",
                "Name": "ZM_CREATE_ANALYSIS_IMAGES",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Create analysed alarm images with motion outlined",
                "Help": " By default during an alarm ZoneMinder records both the raw captured image and one that has been analysed and had areas where motion was detected outlined. This can be very useful during zone configuration or in analysing why events occurred. However it also incurs some overhead and in a stable system may no longer be necessary. This parameter allows you to switch the generation of these images off. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "1",
                "Name": "ZM_CSS_DEFAULT",
                "Value": "flat",
                "Type": "string",
                "DefaultValue": "classic",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Default set of css files used by web interface",
                "Help": " ZoneMinder allows the use of many different web interfaces, and some skins allow the use of different set of CSS files to control the appearance. This option allows you to set the default set of css files used by the website.  Users can change their css later, this merely sets the default. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "138",
                "Name": "ZM_DEFAULT_ASPECT_RATIO",
                "Value": "4:3",
                "Type": "string",
                "DefaultValue": "4:3",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "The default width:height aspect ratio used in monitors",
                "Help": " When specifying the dimensions of monitors you can click a checkbox to ensure that the width stays in the correct ratio to the height, or vice versa. This setting allows you to indicate what the ratio of these settings should be. This should be specified in the format <width value>:<height value> and the default of 4:3 normally be acceptable but 11:9 is another common setting. If the checkbox is not clicked when specifying monitor dimensions this setting has no effect. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "13",
                "Name": "ZM_DIR_EVENTS",
                "Value": "events",
                "Type": "string",
                "DefaultValue": "events",
                "Hint": "directory",
                "Pattern": "(?^:^([a-zA-Z0-9-_.]+)$)",
                "Format": " $1 ",
                "Prompt": "Directory where events are stored",
                "Help": " This is the path to the events directory where all the event images and other miscellaneous files are stored. CAUTION: The directory you specify here cannot be outside the web root. This is a common mistake. Most users should never change this value. If you intend to record events to a second disk or network share, then you should mount the drive or share directly to the ZoneMinder events folder or follow the instructions in the ZoneMinder Wiki titled Using a dedicated Hard Drive. ",
                "Category": "paths",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "15",
                "Name": "ZM_DIR_IMAGES",
                "Value": "images",
                "Type": "string",
                "DefaultValue": "images",
                "Hint": "directory",
                "Pattern": "(?^:^([a-zA-Z0-9-_.]+)$)",
                "Format": " $1 ",
                "Prompt": "Directory where the images that the ZoneMinder client generates are stored",
                "Help": " ZoneMinder generates a myriad of images, mostly of which are associated with events. For those that aren't this is where they go. CAUTION: The directory you specify here cannot be outside the web root. This is a common mistake. Most users should never change this value. If you intend to save images to a second disk or network share, then you should mount the drive or share directly to the ZoneMinder images folder or follow the instructions in the ZoneMinder Wiki titled Using a dedicated Hard Drive. ",
                "Category": "paths",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "16",
                "Name": "ZM_DIR_SOUNDS",
                "Value": "sounds",
                "Type": "string",
                "DefaultValue": "sounds",
                "Hint": "directory",
                "Pattern": "(?^:^([a-zA-Z0-9-_.]+)$)",
                "Format": " $1 ",
                "Prompt": "Directory to the sounds that the ZoneMinder client can use",
                "Help": " ZoneMinder can optionally play a sound file when an alarm is detected. This indicates where to look for this file. CAUTION: The directory you specify here cannot be outside the web root. Most users should never change this value. ",
                "Category": "paths",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "67",
                "Name": "ZM_DUMP_CORES",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Create core files on unexpected process failure.",
                "Help": " When an unrecoverable error occurs in a ZoneMinder binary process is has traditionally been trapped and the details written to logs to aid in remote analysis. However in some cases it is easier to diagnose the error if a core file, which is a memory dump of the process at the time of the error, is created. This can be interactively analysed in the debugger and may reveal more or better information than that available from the logs. This option is recommended for advanced users only otherwise leave at the default. Note using this option to trigger core files will mean that there will be no indication in the binary logs that a process has died, they will just stop, however the zmdc log will still contain an entry. Also note that you may have to explicitly enable core file creation on your system via the 'ulimit -c' command or other means otherwise no file will be created regardless of the value of this option. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "209",
                "Name": "ZM_DYN_CURR_VERSION",
                "Value": "1.29.0",
                "Type": "string",
                "DefaultValue": "1.29.0",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": " What the effective current version of ZoneMinder is, might be different from actual if versions ignored ",
                "Help": "",
                "Category": "dynamic",
                "Readonly": "1",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "210",
                "Name": "ZM_DYN_DB_VERSION",
                "Value": "1.29.0",
                "Type": "string",
                "DefaultValue": "1.29.0",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "What the version of the database is, from zmupdate",
                "Help": "",
                "Category": "dynamic",
                "Readonly": "1",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "213",
                "Name": "ZM_DYN_DONATE_REMINDER_TIME",
                "Value": "1461661841",
                "Type": "integer",
                "DefaultValue": "0",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "When the earliest time to remind about donations will be",
                "Help": "",
                "Category": "dynamic",
                "Readonly": "1",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "211",
                "Name": "ZM_DYN_LAST_CHECK",
                "Value": "",
                "Type": "integer",
                "DefaultValue": "",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "When the last check for version from zoneminder.com was",
                "Help": "",
                "Category": "dynamic",
                "Readonly": "1",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "208",
                "Name": "ZM_DYN_LAST_VERSION",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "What the last version of ZoneMinder recorded from zoneminder.com is",
                "Help": "",
                "Category": "dynamic",
                "Readonly": "1",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "212",
                "Name": "ZM_DYN_NEXT_REMINDER",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "When the earliest time to remind about versions will be",
                "Help": "",
                "Category": "dynamic",
                "Readonly": "1",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "214",
                "Name": "ZM_DYN_SHOW_DONATE_REMINDER",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Remind about donations or not",
                "Help": "",
                "Category": "dynamic",
                "Readonly": "1",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "112",
                "Name": "ZM_EMAIL_ADDRESS",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "your.name@your.domain",
                "Pattern": "(?^:^([a-zA-Z0-9_.-]+)@([a-zA-Z0-9_.-]+)$)",
                "Format": " $1@$2 ",
                "Prompt": "The email address to send matching event details to",
                "Help": " This option is used to define the email address that any events that match the appropriate filters will be sent to. ",
                "Category": "mail",
                "Readonly": "0",
                "Requires": "ZM_OPT_EMAIL=1"
            }
        },
        {
            "Config": {
                "Id": "115",
                "Name": "ZM_EMAIL_BODY",
                "Value": "\nHello,\n\nAn alarm has been detected on your installation of the ZoneMinder.\n\nThe details are as follows :-\n\n  Monitor  : %MN%\n  Event Id : %EI%\n  Length   : %EL%\n  Frames   : %EF% (%EFA%)\n  Scores   : t%EST% m%ESM% a%ESA%\n\nThis alarm was matched by the %FN% filter and can be viewed at %EPS%\n\nZoneMinder",
                "Type": "text",
                "DefaultValue": "\nHello,\n\nAn alarm has been detected on your installation of the ZoneMinder.\n\nThe details are as follows :-\n\n  Monitor  : %MN%\n  Event Id : %EI%\n  Length   : %EL%\n  Frames   : %EF% (%EFA%)\n  Scores   : t%EST% m%ESM% a%ESA%\n\nThis alarm was matched by the %FN% filter and can be viewed at %EPS%\n\nZoneMinder",
                "Hint": "free text",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "The body of the email used to send matching event details",
                "Help": " This option is used to define the content of the email that is sent for any events that match the appropriate filters. ",
                "Category": "mail",
                "Readonly": "0",
                "Requires": "ZM_OPT_EMAIL=1"
            }
        },
        {
            "Config": {
                "Id": "122",
                "Name": "ZM_EMAIL_HOST",
                "Value": "localhost",
                "Type": "string",
                "DefaultValue": "localhost",
                "Hint": "host.your.domain",
                "Pattern": "(?^:^([a-zA-Z0-9_.-]+)$)",
                "Format": " $1 ",
                "Prompt": "The host address of your SMTP mail server",
                "Help": " If you have chosen SMTP as the method by which to send notification emails or messages then this option allows you to choose which SMTP server to use to send them. The default of localhost may work if you have the sendmail, exim or a similar daemon running however you may wish to enter your ISP's SMTP mail server here. ",
                "Category": "mail",
                "Readonly": "0",
                "Requires": "ZM_OPT_EMAIL=1;ZM_OPT_MESSAGE=1"
            }
        },
        {
            "Config": {
                "Id": "114",
                "Name": "ZM_EMAIL_SUBJECT",
                "Value": "ZoneMinder: Alarm - %MN%-%EI% (%ESM% - %ESA% %EFA%)",
                "Type": "string",
                "DefaultValue": "ZoneMinder: Alarm - %MN%-%EI% (%ESM% - %ESA% %EFA%)",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "The subject of the email used to send matching event details",
                "Help": " This option is used to define the subject of the email that is sent for any events that match the appropriate filters. ",
                "Category": "mail",
                "Readonly": "0",
                "Requires": "ZM_OPT_EMAIL=1"
            }
        },
        {
            "Config": {
                "Id": "113",
                "Name": "ZM_EMAIL_TEXT",
                "Value": "subject = \"ZoneMinder: Alarm - %MN%-%EI% (%ESM% - %ESA% %EFA%)\"\nbody = \"\nHello,\n\nAn alarm has been detected on your installation of the ZoneMinder.\n\nThe details are as follows :-\n\n  Monitor  : %MN%\n  Event Id : %EI%\n  Length   : %EL%\n  Frames   : %EF% (%EFA%)\n  Scores   : t%EST% m%ESM% a%ESA%\n\nThis alarm was matched by the %FN% filter and can be viewed at %EPS%\n\nZoneMinder\"",
                "Type": "text",
                "DefaultValue": "subject = \"ZoneMinder: Alarm - %MN%-%EI% (%ESM% - %ESA% %EFA%)\"\nbody = \"\nHello,\n\nAn alarm has been detected on your installation of the ZoneMinder.\n\nThe details are as follows :-\n\n  Monitor  : %MN%\n  Event Id : %EI%\n  Length   : %EL%\n  Frames   : %EF% (%EFA%)\n  Scores   : t%EST% m%ESM% a%ESA%\n\nThis alarm was matched by the %FN% filter and can be viewed at %EPS%\n\nZoneMinder\"",
                "Hint": "free text",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "The text of the email used to send matching event details",
                "Help": " This option is used to define the content of the email that is sent for any events that match the appropriate filters. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": "ZM_OPT_EMAIL=1"
            }
        },
        {
            "Config": {
                "Id": "133",
                "Name": "ZM_EVENT_CLOSE_MODE",
                "Value": "idle",
                "Type": "string",
                "DefaultValue": "idle",
                "Hint": "time|idle|alarm",
                "Pattern": "(?^i:^([tia]))",
                "Format": " ($1 =~ \/^t\/)\n                             ? \"time\"\n                             : ($1 =~ \/^i\/ ? \"idle\" : \"time\" )\n                           ",
                "Prompt": "When continuous events are closed.",
                "Help": " When a monitor is running in a continuous recording mode (Record or Mocord) events are usually closed after a fixed period of time (the section length). However in Mocord mode it is possible that motion detection may occur near the end of a section. This option controls what happens when an alarm occurs in Mocord mode. The 'time' setting means that the event will be closed at the end of the section regardless of alarm activity. The 'idle' setting means that the event will be closed at the end of the section if there is no alarm activity occurring at the time otherwise it will be closed once the alarm is over meaning the event may end up being longer than the normal section length. The 'alarm' setting means that if an alarm occurs during the event, the event will be closed once the alarm is over regardless of when this occurs. This has the effect of limiting the number of alarms to one per event and the events will be shorter than the section length if an alarm has occurred. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "137",
                "Name": "ZM_EVENT_IMAGE_DIGITS",
                "Value": "5",
                "Type": "integer",
                "DefaultValue": "5",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How many significant digits are used in event image numbering",
                "Help": " As event images are captured they are stored to the filesystem with a numerical index. By default this index has three digits so the numbers start 001, 002 etc. This works works for most scenarios as events with more than 999 frames are rarely captured. However if you have extremely long events and use external applications then you may wish to increase this to ensure correct sorting of images in listings etc. Warning, increasing this value on a live system may render existing events unviewable as the event will have been saved with the previous scheme. Decreasing this value should have no ill effects. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "215",
                "Name": "ZM_EYEZM_DEBUG",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Switch additional debugging on for eyeZm Plugin",
                "Help": " Enable or Disable extra debugging from the eyeZm Plugin. Extra debugging information will be displayed in it's own file (EYEZM_LOG_TO_FILE is set), or your Apache error log ",
                "Category": "eyeZm",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "218",
                "Name": "ZM_EYEZM_EVENT_VCODEC",
                "Value": "mpeg4",
                "Type": "string",
                "DefaultValue": "mpeg4",
                "Hint": "mpeg4|h264",
                "Pattern": "(?^i:^([mh]))",
                "Format": " $1 =~ \/^m\/ ? \"mpeg4\" : \"h264\" ",
                "Prompt": "Default video-codec to use for encoding events",
                "Help": " The eyeZm Plugin calls FFMPEG externally to encode the captured images. If your FFMPEG is not built with support for H264, change this to MPEG-4. If using H264, please check http:\/\/www.eyezm.com for H264 requirements and that your eyeZm version supports H264 (v1.2+). ",
                "Category": "eyeZm",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "219",
                "Name": "ZM_EYEZM_FEED_VCODEC",
                "Value": "mjpeg",
                "Type": "string",
                "DefaultValue": "mjpeg",
                "Hint": "mjpeg|h264",
                "Pattern": "(?^i:^([mh]))",
                "Format": " $1 =~ \/^m\/ ? \"mjpeg\" : \"h264\" ",
                "Prompt": "Default video-codec to use for streaming the live feed",
                "Help": " Determines whether the live stream is generated using native MJPEG streaming with ZoneMinder, or H264 using FFMPEG and HTML-5 streaming. If using H264, please check http:\/\/www.eyezm.com for H264 requirements and that your eyeZm version supports H264 (v1.2+). This is just a default parameter, and can be overridden with eyeZm. ",
                "Category": "eyeZm",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "220",
                "Name": "ZM_EYEZM_H264_DEFAULT_BR",
                "Value": "96k",
                "Type": "string",
                "DefaultValue": "96k",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Default bit-rate to use with FFMPEG for H264 streaming",
                "Help": " When using the eyeZm Plugin to stream H264 data, FFMPEG requires a bitrate to control the quality and bandwidth of the video. This should be specified in a format acceptable to FFMPEG. The default value is sufficient for most installations. This is just a default parameter, and can be overridden with eyeZm. ",
                "Category": "eyeZm",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "221",
                "Name": "ZM_EYEZM_H264_DEFAULT_EVBR",
                "Value": "128k",
                "Type": "string",
                "DefaultValue": "128k",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Default bit-rate to use with FFMPEG for H264 event viewing",
                "Help": " When using the eyeZm Plugin to view events in H264, FFMPEG requires a bitrate to control the quality and bandwidth of the video. This should be specified in a format acceptable to FFMPEG. The default value is sufficient for most installations. This is just a default parameter, and can be overridden with eyeZm. ",
                "Category": "eyeZm",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "222",
                "Name": "ZM_EYEZM_H264_TIMEOUT",
                "Value": "20",
                "Type": "string",
                "DefaultValue": "20",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Timeout (sec) to wait for H264 stream to start before terminating",
                "Help": " The eyeZm Plugin will attempt to spawn an H264 stream when requested, and require that it complete within the timeout specified. If you have a slow system or find through the logs that the H264 stream is not starting because the timeout is expiring, even though FFMPEG is running, try increasing this value. If you have a fast system, decreasing this value can improve the responsiveness when there are issues starting H264 streams ",
                "Category": "eyeZm",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "217",
                "Name": "ZM_EYEZM_LOG_FILE",
                "Value": "\/var\/log\/zm\/zm_xml.log",
                "Type": "string",
                "DefaultValue": "\/var\/log\/zm\/zm_xml.log",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Default filename to use when logging eyeZm Output and EYEZM_LOG_TO_FILE is enabled",
                "Help": " This file will contain it's own output from the eyeZm Plugin when EYEZM_LOG_TO_FILE and EYEZM_DEBUG are both enabled ",
                "Category": "eyeZm",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "216",
                "Name": "ZM_EYEZM_LOG_TO_FILE",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "When eyeZm Debugging is enabled, enabling this logs output to it's own file",
                "Help": " When EYEZM_DEBUG is on and EYEZM_LOG_TO_FILE is on, output generated from the eyeZm Plugin will go to it's own file. Otherwise it will go to the apache error log. ",
                "Category": "eyeZm",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "223",
                "Name": "ZM_EYEZM_SEG_DURATION",
                "Value": "3",
                "Type": "string",
                "DefaultValue": "3",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Segment duration used for streaming using HTTP-5 Streaming protocol",
                "Help": " The HTTP-5 Live Streaming Protocol segments the input video stream into small chunks of a duration specified by this parameter. Increasing the segment duration will help with choppy connections on the other end, but will increase the latency in starting a stream. ",
                "Category": "eyeZm",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "33",
                "Name": "ZM_FAST_IMAGE_BLENDS",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Use a fast algorithm to blend the reference image",
                "Help": " To detect alarms ZoneMinder needs to blend the captured image with the stored reference image to update it for comparison with the next image. The reference blend percentage specified for the monitor controls how much the new image affects the reference image. There are two methods that are available for this. If this option is set then fast calculation which does not use any multiplication or division is used. This calculation is extremely fast, however it limits the possible blend percentages to 50%, 25%, 12.5%, 6.25%, 3.25% and 1.5%. Any other blend percentage will be rounded to the nearest possible one. The alternative is to switch this option off and use standard blending instead, which is slower. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "47",
                "Name": "ZM_FFMPEG_FORMATS",
                "Value": "mpg mpeg wmv asf avi* mov swf 3gp**",
                "Type": "string",
                "DefaultValue": "mpg mpeg wmv asf avi* mov swf 3gp**",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Formats to allow for ffmpeg video generation",
                "Help": " Ffmpeg can generate video in many different formats. This option allows you to list the ones you want to be able to select. As new formats are supported by ffmpeg you can add them here and be able to use them immediately. Adding a '*' after a format indicates that this will be the default format used for web video, adding '**' defines the default format for phone video. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": "ZM_OPT_FFMPEG=1"
            }
        },
        {
            "Config": {
                "Id": "45",
                "Name": "ZM_FFMPEG_INPUT_OPTIONS",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Additional input options to ffmpeg",
                "Help": " Ffmpeg can take many options on the command line to control the quality of video produced. This option allows you to specify your own set that apply to the input to ffmpeg (options that are given before the -i option). Check the ffmpeg documentation for a full list of options which may be used here. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": "ZM_OPT_FFMPEG=1"
            }
        },
        {
            "Config": {
                "Id": "48",
                "Name": "ZM_FFMPEG_OPEN_TIMEOUT",
                "Value": "10",
                "Type": "integer",
                "DefaultValue": "10",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Timeout in seconds when opening a stream.",
                "Help": " When Ffmpeg is opening a stream, it can take a long time before failing; certain circumstances even seem to be able to lock indefinitely. This option allows you to set a maximum time in seconds to pass before closing the stream and trying to reopen it again. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": "ZM_OPT_FFMPEG=1"
            }
        },
        {
            "Config": {
                "Id": "46",
                "Name": "ZM_FFMPEG_OUTPUT_OPTIONS",
                "Value": "-r 25",
                "Type": "string",
                "DefaultValue": "-r 25",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Additional output options to ffmpeg",
                "Help": " Ffmpeg can take many options on the command line to control the quality of video produced. This option allows you to specify your own set that apply to the output from ffmpeg (options that are given after the -i option). Check the ffmpeg documentation for a full list of options which may be used here. The most common one will often be to force an output frame rate supported by the video encoder. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": "ZM_OPT_FFMPEG=1"
            }
        },
        {
            "Config": {
                "Id": "89",
                "Name": "ZM_FILTER_EXECUTE_INTERVAL",
                "Value": "60",
                "Type": "integer",
                "DefaultValue": "60",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) to run automatic saved filters",
                "Help": " ZoneMinder allows you to save filters to the database which allow events that match certain criteria to be emailed, deleted or uploaded to a remote machine etc. The zmfilter daemon loads these and does the actual operation. This option determines how often the filters are executed on the saved event in the database. If you want a rapid response to new events this should be a smaller value, however this may increase the overall load on the system and affect performance of other elements. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "88",
                "Name": "ZM_FILTER_RELOAD_DELAY",
                "Value": "300",
                "Type": "integer",
                "DefaultValue": "300",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) filters are reloaded in zmfilter",
                "Help": " ZoneMinder allows you to save filters to the database which allow events that match certain criteria to be emailed, deleted or uploaded to a remote machine etc. The zmfilter daemon loads these and does the actual operation. This option determines how often the filters are reloaded from the database to get the latest versions or new filters. If you don't change filters very often this value can be set to a large value. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "131",
                "Name": "ZM_FORCED_ALARM_SCORE",
                "Value": "255",
                "Type": "integer",
                "DefaultValue": "255",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Score to give forced alarms",
                "Help": " The 'zmu' utility can be used to force an alarm on a monitor rather than rely on the motion detection algorithms. This option determines what score to give these alarms to distinguish them from regular ones. It must be 255 or less. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "134",
                "Name": "ZM_FORCE_CLOSE_EVENTS",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Close events at section ends.",
                "Help": " When a monitor is running in a continuous recording mode (Record or Mocord) events are usually closed after a fixed period of time (the section length). However in Mocord mode it is possible that motion detection may occur near the end of a section and ordinarily this will prevent the event being closed until the motion has ceased. Switching this option on will force the event closed at the specified time regardless of any motion activity. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "141",
                "Name": "ZM_FRAME_SOCKET_SIZE",
                "Value": "0",
                "Type": "integer",
                "DefaultValue": "0",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Specify the frame server socket buffer size if non-standard",
                "Help": " For large captured images it is possible for the writes from the analysis daemon to the frame server to fail as the amount to be written exceeds the default buffer size. While the images are then written by the analysis daemon so no data is lost, it defeats the object of the frame server daemon in the first place. You can use this option to indicate that a larger buffer size should be used. Note that you may have to change the existing maximum socket buffer size on your system via sysctl (or in \/proc\/sys\/net\/core\/wmem_max) to allow this new size to be set. Alternatively you can change the default buffer size on your system in the same way in which case that will be used with no change necessary in this option ",
                "Category": "system",
                "Readonly": "0",
                "Requires": "ZM_OPT_FRAME_SERVER=1"
            }
        },
        {
            "Config": {
                "Id": "123",
                "Name": "ZM_FROM_EMAIL",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "your.name@your.domain",
                "Pattern": "(?^:^([a-zA-Z0-9_.-]+)@([a-zA-Z0-9_.-]+)$)",
                "Format": " $1@$2 ",
                "Prompt": "The email address you wish your event notifications to originate from",
                "Help": " The emails or messages that will be sent to you informing you of events can appear to come from a designated email address to help you with mail filtering etc. An address of something like ZoneMinder@your.domain is recommended. ",
                "Category": "mail",
                "Readonly": "0",
                "Requires": "ZM_OPT_EMAIL=1;ZM_OPT_MESSAGE=1"
            }
        },
        {
            "Config": {
                "Id": "40",
                "Name": "ZM_HTTP_TIMEOUT",
                "Value": "2500",
                "Type": "integer",
                "DefaultValue": "2500",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How long ZoneMinder waits before giving up on images (milliseconds)",
                "Help": " When retrieving remote images ZoneMinder will wait for this length of time before deciding that an image is not going to arrive and taking steps to retry. This timeout is in milliseconds (1000 per second) and will apply to each part of an image if it is not sent in one whole chunk. ",
                "Category": "network",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "39",
                "Name": "ZM_HTTP_UA",
                "Value": "ZoneMinder",
                "Type": "string",
                "DefaultValue": "ZoneMinder",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "The user agent that ZoneMinder uses to identify itself",
                "Help": " When ZoneMinder communicates with remote cameras it will identify itself using this string and it's version number. This is normally sufficient, however if a particular cameras expects only to communicate with certain browsers then this can be changed to a different string identifying ZoneMinder as Internet Explorer or Netscape etc. ",
                "Category": "network",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "38",
                "Name": "ZM_HTTP_VERSION",
                "Value": "1.0",
                "Type": "string",
                "DefaultValue": "1.0",
                "Hint": "1.1|1.0",
                "Pattern": "(?^:^(1.[01])$)",
                "Format": " $1?$1:\"\" ",
                "Prompt": "The version of HTTP that ZoneMinder will use to connect",
                "Help": " ZoneMinder can communicate with network cameras using either of the HTTP\/1.1 or HTTP\/1.0 standard. A server will normally fall back to the version it supports with no problem so this should usually by left at the default. However it can be changed to HTTP\/1.0 if necessary to resolve particular issues. ",
                "Category": "network",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "21",
                "Name": "ZM_JPEG_ALARM_FILE_QUALITY",
                "Value": "0",
                "Type": "integer",
                "DefaultValue": "0",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Set the JPEG quality setting for the saved event files during an alarm (1-100)",
                "Help": " This value is equivalent to the regular jpeg file quality setting above except that it only applies to images saved while in an alarm state and then only if this value is set to a higher quality setting than the ordinary file setting. If set to a lower value then it is ignored. Thus leaving it at the default of 0 effectively means to use the regular file quality setting for all saved images. This is to prevent acccidentally saving important images at a worse quality setting. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "20",
                "Name": "ZM_JPEG_FILE_QUALITY",
                "Value": "70",
                "Type": "integer",
                "DefaultValue": "70",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Set the JPEG quality setting for the saved event files (1-100)",
                "Help": " When ZoneMinder detects an event it will save the images associated with that event to files. These files are in the JPEG format and can be viewed or streamed later. This option specifies what image quality should be used to save these files. A higher number means better quality but less compression so will take up more disk space and take longer to view over a slow connection. By contrast a low number means smaller, quicker to view, files but at the price of lower quality images. This setting applies to all images written except if the capture image has caused an alarm and the alarm file quality option is set at a higher value when that is used instead. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "22",
                "Name": "ZM_JPEG_IMAGE_QUALITY",
                "Value": "70",
                "Type": "integer",
                "DefaultValue": "70",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Set the JPEG quality setting for the streamed 'live' images (1-100)",
                "Help": " When viewing a 'live' stream for a monitor ZoneMinder will grab an image from the buffer and encode it into JPEG format before sending it. This option specifies what image quality should be used to encode these images. A higher number means better quality but less compression so will take longer to view over a slow connection. By contrast a low number means quicker to view images but at the price of lower quality images. This option does not apply when viewing events or still images as these are usually just read from disk and so will be encoded at the quality specified by the previous options. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "23",
                "Name": "ZM_JPEG_STREAM_QUALITY",
                "Value": "70",
                "Type": "integer",
                "DefaultValue": "70",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Set the JPEG quality setting for the streamed 'live' images (1-100)",
                "Help": " When viewing a 'live' stream for a monitor ZoneMinder will grab an image from the buffer and encode it into JPEG format before sending it. This option specifies what image quality should be used to encode these images. A higher number means better quality but less compression so will take longer to view over a slow connection. By contrast a low number means quicker to view images but at the price of lower quality images. This option does not apply when viewing events or still images as these are usually just read from disk and so will be encoded at the quality specified by the previous options. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "2",
                "Name": "ZM_LANG_DEFAULT",
                "Value": "de_de",
                "Type": "string",
                "DefaultValue": "en_gb",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Default language used by web interface",
                "Help": " ZoneMinder allows the web interface to use languages other than English if the appropriate language file has been created and is present. This option allows you to change the default language that is used from the shipped language, British English, to another language ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "63",
                "Name": "ZM_LOG_ALARM_ERR_COUNT",
                "Value": "10",
                "Type": "integer",
                "DefaultValue": "10",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Number of errors indicating system alarm state",
                "Help": " When ZoneMinder is logging events to the database it can retrospectively examine the number of warnings and errors that have occurred to calculate an overall state of system health. This option allows you to specify how many errors must have occurred within the defined time period to generate an overall system alarm state. A value of zero means errors are not considered. This value is ignored if LOG_LEVEL_DATABASE is set to None. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "64",
                "Name": "ZM_LOG_ALARM_FAT_COUNT",
                "Value": "1",
                "Type": "integer",
                "DefaultValue": "1",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Number of fatal error indicating system alarm state",
                "Help": " When ZoneMinder is logging events to the database it can retrospectively examine the number of warnings and errors that have occurred to calculate an overall state of system health. This option allows you to specify how many fatal errors (including panics) must have occurred within the defined time period to generate an overall system alarm state. A value of zero means fatal errors are not considered. This value is ignored if LOG_LEVEL_DATABASE is set to None. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "62",
                "Name": "ZM_LOG_ALARM_WAR_COUNT",
                "Value": "100",
                "Type": "integer",
                "DefaultValue": "100",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Number of warnings indicating system alarm state",
                "Help": " When ZoneMinder is logging events to the database it can retrospectively examine the number of warnings and errors that have occurred to calculate an overall state of system health. This option allows you to specify how many warnings must have occurred within the defined time period to generate an overall system alarm state. A value of zero means warnings are not considered. This value is ignored if LOG_LEVEL_DATABASE is set to None. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "60",
                "Name": "ZM_LOG_ALERT_ERR_COUNT",
                "Value": "1",
                "Type": "integer",
                "DefaultValue": "1",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Number of errors indicating system alert state",
                "Help": " When ZoneMinder is logging events to the database it can retrospectively examine the number of warnings and errors that have occurred to calculate an overall state of system health. This option allows you to specify how many errors must have occurred within the defined time period to generate an overall system alert state. A value of zero means errors are not considered. This value is ignored if LOG_LEVEL_DATABASE is set to None. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "61",
                "Name": "ZM_LOG_ALERT_FAT_COUNT",
                "Value": "0",
                "Type": "integer",
                "DefaultValue": "0",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Number of fatal error indicating system alert state",
                "Help": " When ZoneMinder is logging events to the database it can retrospectively examine the number of warnings and errors that have occurred to calculate an overall state of system health. This option allows you to specify how many fatal errors (including panics) must have occurred within the defined time period to generate an overall system alert state. A value of zero means fatal errors are not considered. This value is ignored if LOG_LEVEL_DATABASE is set to None. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "59",
                "Name": "ZM_LOG_ALERT_WAR_COUNT",
                "Value": "1",
                "Type": "integer",
                "DefaultValue": "1",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Number of warnings indicating system alert state",
                "Help": " When ZoneMinder is logging events to the database it can retrospectively examine the number of warnings and errors that have occurred to calculate an overall state of system health. This option allows you to specify how many warnings must have occurred within the defined time period to generate an overall system alert state. A value of zero means warnings are not considered. This value is ignored if LOG_LEVEL_DATABASE is set to None. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "58",
                "Name": "ZM_LOG_CHECK_PERIOD",
                "Value": "900",
                "Type": "integer",
                "DefaultValue": "900",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Time period used when calculating overall system health",
                "Help": " When ZoneMinder is logging events to the database it can retrospectively examine the number of warnings and errors that have occurred to calculate an overall state of system health. This option allows you to indicate what period of historical events are used in this calculation. This value is expressed in seconds and is ignored if LOG_LEVEL_DATABASE is set to None. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "53",
                "Name": "ZM_LOG_DATABASE_LIMIT",
                "Value": "7 day",
                "Type": "string",
                "DefaultValue": "7 day",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Maximum number of log entries to retain",
                "Help": " If you are using database logging then it is possible to quickly build up a large number of entries in the Logs table. This option allows you to specify how many of these entries are kept. If you set this option to a number greater than zero then that number is used to determine the maximum number of rows, less than or equal to zero indicates no limit and is not recommended. You can also set this value to time values such as '<n> day' which will limit the log entries to those newer than that time. You can specify 'hour', 'day', 'week', 'month' and 'year', note that the values should be singular (no 's' at the end). The Logs table is pruned periodically so it is possible for more than the expected number of rows to be present briefly in the meantime. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "54",
                "Name": "ZM_LOG_DEBUG",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Switch debugging on",
                "Help": " ZoneMinder components usually support debug logging available to help with diagnosing problems. Binary components have several levels of debug whereas more other components have only one. Normally this is disabled to minimise performance penalties and avoid filling logs too quickly. This option lets you switch on other options that allow you to configure additional debug information to be output. Components will pick up this instruction when they are restarted. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "57",
                "Name": "ZM_LOG_DEBUG_FILE",
                "Value": "\/var\/log\/zm\/zm_debug.log+",
                "Type": "string",
                "DefaultValue": "\/var\/log\/zm\/zm_debug.log+",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Where extra debug is output to",
                "Help": " This option allows you to specify a different target for debug output. All components have a default log file which will norally be in \/tmp or \/var\/log and this is where debug will be written to if this value is empty. Adding a path here will temporarily redirect debug, and other logging output, to this file. This option is a simple filename and you are debugging several components then they will all try and write to the same file with undesirable consequences. Appending a '+' to the filename will cause the file to be created with a '.<pid>' suffix containing your process id. In this way debug from each run of a component is kept separate. This is the recommended setting as it will also prevent subsequent runs from overwriting the same log. You should ensure that permissions are set up to allow writing to the file and directory specified here. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": "ZM_LOG_DEBUG=1"
            }
        },
        {
            "Config": {
                "Id": "56",
                "Name": "ZM_LOG_DEBUG_LEVEL",
                "Value": "1",
                "Type": "integer",
                "DefaultValue": "1",
                "Hint": "1|2|3|4|5|6|7|8|9",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What level of extra debug should be enabled",
                "Help": " There are 9 levels of debug available, with higher numbers being more debug and level 0 being no debug. However not all levels are used by all components. Also if there is debug at a high level it is usually likely to be output at such a volume that it may obstruct normal operation. For this reason you should set the level carefully and cautiously until the degree of debug you wish to see is present. Scripts and the web interface only have one level so this is an on\/off type option for them. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": "ZM_LOG_DEBUG=1"
            }
        },
        {
            "Config": {
                "Id": "55",
                "Name": "ZM_LOG_DEBUG_TARGET",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "What components should have extra debug enabled",
                "Help": " There are three scopes of debug available. Leaving this option blank means that all components will use extra debug (not recommended). Setting this option to '_<component>', e.g. _zmc, will limit extra debug to that component only. Setting this option to '_<component>_<identity>', e.g. '_zmc_m1' will limit extra debug to that instance of the component only. This is ordinarily what you probably want to do. To debug scripts use their names without the .pl extension, e.g. '_zmvideo' and to debug issues with the web interface use '_web'. You can specify multiple targets by separating them with '|' characters. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": "ZM_LOG_DEBUG=1"
            }
        },
        {
            "Config": {
                "Id": "52",
                "Name": "ZM_LOG_LEVEL_DATABASE",
                "Value": "0",
                "Type": "integer",
                "DefaultValue": "0",
                "Hint": "None=-5|Panic=-4|Fatal=-3|Error=-2|Warning=-1|Info=0|Debug=1",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Save logging output to the database",
                "Help": " ZoneMinder logging is now more more integrated between components and allows you to specify the destination for logging output and the individual levels for each. This option lets you control the level of logging output that is written to the database. This is a new option which can make viewing logging output easier and more intuitive and also makes it easier to get an overall impression of how the system is performing. If you have a large or very busy system then it is possible that use of this option may slow your system down if the table becomes very large. Ensure you use the LOG_DATABASE_LIMIT option to keep the table to a manageable size. This option controls the maximum level of logging that will be written, so Info includes Warnings and Errors etc. To disable entirely, set this option to None. You should use caution when setting this option to Debug as it can affect severely affect system performance. If you want debug you will also need to set a level and component below ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "50",
                "Name": "ZM_LOG_LEVEL_FILE",
                "Value": "-5",
                "Type": "integer",
                "DefaultValue": "-5",
                "Hint": "None=-5|Panic=-4|Fatal=-3|Error=-2|Warning=-1|Info=0|Debug=1",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Save logging output to component files",
                "Help": " ZoneMinder logging is now more more integrated between components and allows you to specify the destination for logging output and the individual levels for each. This option lets you control the level of logging output that goes to individual log files written by specific components. This is how logging worked previously and although useful for tracking down issues in specific components it also resulted in many disparate log files. To preserve this behaviour you should ensure this value is set to Info or Warning. This option controls the maximum level of logging that will be written, so Info includes Warnings and Errors etc. To disable entirely, set this option to None. You should use caution when setting this option to Debug as it can affect severely affect system performance though file output has less impact than the other options. If you want debug you will also need to set a level and component below ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "49",
                "Name": "ZM_LOG_LEVEL_SYSLOG",
                "Value": "0",
                "Type": "integer",
                "DefaultValue": "0",
                "Hint": "None=-5|Panic=-4|Fatal=-3|Error=-2|Warning=-1|Info=0|Debug=1",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Save logging output to the system log",
                "Help": " ZoneMinder logging is now more more integrated between components and allows you to specify the destination for logging output and the individual levels for each. This option lets you control the level of logging output that goes to the system log. ZoneMinder binaries have always logged to the system log but now scripts and web logging is also included. To preserve the previous behaviour you should ensure this value is set to Info or Warning. This option controls the maximum level of logging that will be written, so Info includes Warnings and Errors etc. To disable entirely, set this option to None. You should use caution when setting this option to Debug as it can affect severely affect system performance. If you want debug you will also need to set a level and component below ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "51",
                "Name": "ZM_LOG_LEVEL_WEBLOG",
                "Value": "-5",
                "Type": "integer",
                "DefaultValue": "-5",
                "Hint": "None=-5|Panic=-4|Fatal=-3|Error=-2|Warning=-1|Info=0|Debug=1",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Save logging output to the weblog",
                "Help": " ZoneMinder logging is now more more integrated between components and allows you to specify the destination for logging output and the individual levels for each. This option lets you control the level of logging output from the web interface that goes to the httpd error log. Note that only web logging from PHP and JavaScript files is included and so this option is really only useful for investigating specific issues with those components. This option controls the maximum level of logging that will be written, so Info includes Warnings and Errors etc. To disable entirely, set this option to None. You should use caution when setting this option to Debug as it can affect severely affect system performance. If you want debug you will also need to set a level and component below ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "125",
                "Name": "ZM_MAX_RESTART_DELAY",
                "Value": "600",
                "Type": "integer",
                "DefaultValue": "600",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Maximum delay (in seconds) for daemon restart attempts.",
                "Help": " The zmdc (zm daemon control) process controls when processeses are started or stopped and will attempt to restart any that fail. If a daemon fails frequently then a delay is introduced between each restart attempt. If the daemon stills fails then this delay is increased to prevent extra load being placed on the system by continual restarts. This option controls what this maximum delay is. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "42",
                "Name": "ZM_MAX_RTP_PORT",
                "Value": "40499",
                "Type": "integer",
                "DefaultValue": "40499",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Maximum port that ZoneMinder will listen for RTP traffic on",
                "Help": " When ZoneMinder communicates with MPEG4 capable cameras using RTP with the unicast method it must open ports for the camera to connect back to for control and streaming purposes. This setting specifies the maximum port number that ZoneMinder will use. Ordinarily two adjacent ports are used for each camera, one for control packets and one for data packets. This port should be set to an even number, you may also need to open up a hole in your firewall to allow cameras to connect back if you wish to use unicasting. You should also ensure that you have opened up at least two ports for each monitor that will be connecting to unicasting network cameras. ",
                "Category": "network",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "35",
                "Name": "ZM_MAX_SUSPEND_TIME",
                "Value": "30",
                "Type": "integer",
                "DefaultValue": "30",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Maximum time that a monitor may have motion detection suspended",
                "Help": " ZoneMinder allows monitors to have motion detection to be suspended, for instance while panning a camera. Ordinarily this relies on the operator resuming motion detection afterwards as failure to do so can leave a monitor in a permanently suspended state. This setting allows you to set a maximum time which a camera may be suspended for before it automatically resumes motion detection. This time can be extended by subsequent suspend indications after the first so continuous camera movement will also occur while the monitor is suspended. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "117",
                "Name": "ZM_MESSAGE_ADDRESS",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "your.name@your.domain",
                "Pattern": "(?^:^([a-zA-Z0-9_.-]+)@([a-zA-Z0-9_.-]+)$)",
                "Format": " $1@$2 ",
                "Prompt": "The email address to send matching event details to",
                "Help": " This option is used to define the short message email address that any events that match the appropriate filters will be sent to. ",
                "Category": "mail",
                "Readonly": "0",
                "Requires": "ZM_OPT_MESSAGE=1"
            }
        },
        {
            "Config": {
                "Id": "120",
                "Name": "ZM_MESSAGE_BODY",
                "Value": "ZM alarm detected - %EL% secs, %EF%\/%EFA% frames, t%EST%\/m%ESM%\/a%ESA% score.",
                "Type": "text",
                "DefaultValue": "ZM alarm detected - %EL% secs, %EF%\/%EFA% frames, t%EST%\/m%ESM%\/a%ESA% score.",
                "Hint": "free text",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "The body of the message used to send matching event details",
                "Help": " This option is used to define the content of the message that is sent for any events that match the appropriate filters. ",
                "Category": "mail",
                "Readonly": "0",
                "Requires": "ZM_OPT_MESSAGE=1"
            }
        },
        {
            "Config": {
                "Id": "119",
                "Name": "ZM_MESSAGE_SUBJECT",
                "Value": "ZoneMinder: Alarm - %MN%-%EI%",
                "Type": "string",
                "DefaultValue": "ZoneMinder: Alarm - %MN%-%EI%",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "The subject of the message used to send matching event details",
                "Help": " This option is used to define the subject of the message that is sent for any events that match the appropriate filters. ",
                "Category": "mail",
                "Readonly": "0",
                "Requires": "ZM_OPT_MESSAGE=1"
            }
        },
        {
            "Config": {
                "Id": "118",
                "Name": "ZM_MESSAGE_TEXT",
                "Value": "subject = \"ZoneMinder: Alarm - %MN%-%EI%\"\nbody = \"ZM alarm detected - %EL% secs, %EF%\/%EFA% frames, t%EST%\/m%ESM%\/a%ESA% score.\"",
                "Type": "text",
                "DefaultValue": "subject = \"ZoneMinder: Alarm - %MN%-%EI%\"\nbody = \"ZM alarm detected - %EL% secs, %EF%\/%EFA% frames, t%EST%\/m%ESM%\/a%ESA% score.\"",
                "Hint": "free text",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "The text of the message used to send matching event details",
                "Help": " This option is used to define the content of the message that is sent for any events that match the appropriate filters. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": "ZM_OPT_MESSAGE=1"
            }
        },
        {
            "Config": {
                "Id": "41",
                "Name": "ZM_MIN_RTP_PORT",
                "Value": "40200",
                "Type": "integer",
                "DefaultValue": "40200",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "Minimum port that ZoneMinder will listen for RTP traffic on",
                "Help": " When ZoneMinder communicates with MPEG4 capable cameras using RTP with the unicast method it must open ports for the camera to connect back to for control and streaming purposes. This setting specifies the minimum port number that ZoneMinder will use. Ordinarily two adjacent ports are used for each camera, one for control packets and one for data packets. This port should be set to an even number, you may also need to open up a hole in your firewall to allow cameras to connect back if you wish to use unicasting. ",
                "Category": "network",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "25",
                "Name": "ZM_MPEG_LIVE_FORMAT",
                "Value": "swf",
                "Type": "string",
                "DefaultValue": "swf",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "What format 'live' video streams are played in",
                "Help": " When using MPEG mode ZoneMinder can output live video. However what formats are handled by the browser varies greatly between machines. This option allows you to specify a video format using a file extension format, so you would just enter the extension of the file type you would like and the rest is determined from that. The default of 'asf' works well under Windows with Windows Media Player but I'm currently not sure what, if anything, works on a Linux platform. If you find out please let me know! If this option is left blank then live streams will revert to being in motion jpeg format ",
                "Category": "images",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "26",
                "Name": "ZM_MPEG_REPLAY_FORMAT",
                "Value": "swf",
                "Type": "string",
                "DefaultValue": "swf",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "What format 'replay' video streams are played in",
                "Help": " When using MPEG mode ZoneMinder can replay events in encoded video format. However what formats are handled by the browser varies greatly between machines. This option allows you to specify a video format using a file extension format, so you would just enter the extension of the file type you would like and the rest is determined from that. The default of 'asf' works well under Windows with Windows Media Player and 'mpg', or 'avi' etc should work under Linux. If you know any more then please let me know! If this option is left blank then live streams will revert to being in motion jpeg format ",
                "Category": "images",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "24",
                "Name": "ZM_MPEG_TIMED_FRAMES",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Tag video frames with a timestamp for more realistic streaming",
                "Help": " When using streamed MPEG based video, either for live monitor streams or events, ZoneMinder can send the streams in two ways. If this option is selected then the timestamp for each frame, taken from it's capture time, is included in the stream. This means that where the frame rate varies, for instance around an alarm, the stream will still maintain it's 'real' timing. If this option is not selected then an approximate frame rate is calculated and that is used to schedule frames instead. This option should be selected unless you encounter problems with your preferred streaming method. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "37",
                "Name": "ZM_NETCAM_REGEXPS",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Use regular expression matching with network cameras",
                "Help": " Traditionally ZoneMinder has used complex regular regular expressions to handle the multitude of formats that network cameras produce. In versions from 1.21.1 the default is to use a simpler and faster built in pattern matching methodology. This works well with most networks cameras but if you have problems you can try the older, but more flexible, regular expression based method by selecting this option. Note, to use this method you must have libpcre installed on your system. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": "ZM_OPT_REMOTE_CAMERAS=1"
            }
        },
        {
            "Config": {
                "Id": "121",
                "Name": "ZM_NEW_MAIL_MODULES",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Use a newer perl method to send emails",
                "Help": " Traditionally ZoneMinder has used the MIME::Entity perl module to construct and send notification emails and messages. Some people have reported problems with this module not being present at all or flexible enough for their needs. If you are one of those people this option allows you to select a new mailing method using MIME::Lite and Net::SMTP instead. This method was contributed by Ross Melin and should work for everyone but has not been extensively tested so currently is not selected by default. ",
                "Category": "mail",
                "Readonly": "0",
                "Requires": "ZM_OPT_EMAIL=1;ZM_OPT_MESSAGE=1"
            }
        },
        {
            "Config": {
                "Id": "34",
                "Name": "ZM_OPT_ADAPTIVE_SKIP",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Should frame analysis try and be efficient in skipping frames",
                "Help": " In previous versions of ZoneMinder the analysis daemon would attempt to keep up with the capture daemon by processing the last captured frame on each pass. This would sometimes have the undesirable side-effect of missing a chunk of the initial activity that caused the alarm because the pre-alarm frames would all have to be written to disk and the database before processing the next frame, leading to some delay between the first and second event frames. Setting this option enables a newer adaptive algorithm where the analysis daemon attempts to process as many captured frames as possible, only skipping frames when in danger of the capture daemon overwriting yet to be processed frames. This skip is variable depending on the size of the ring buffer and the amount of space left in it. Enabling this option will give you much better coverage of the beginning of alarms whilst biasing out any skipped frames towards the middle or end of the event. However you should be aware that this will have the effect of making the analysis daemon run somewhat behind the capture daemon during events and for particularly fast rates of capture it is possible for the adaptive algorithm to be overwhelmed and not have time to react to a rapid build up of pending frames and thus for a buffer overrun condition to occur. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "28",
                "Name": "ZM_OPT_CAMBOZOLA",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Is the (optional) cambozola java streaming client installed",
                "Help": " Cambozola is a handy low fat cheese flavoured Java applet that ZoneMinder uses to view image streams on browsers such as Internet Explorer that don't natively support this format. If you use this browser it is highly recommended to install this from http:\/\/www.charliemouse.com\/code\/cambozola\/  however if it is not installed still images at a lower refresh rate can still be viewed. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "142",
                "Name": "ZM_OPT_CONTROL",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Support controllable (e.g. PTZ) cameras",
                "Help": " ZoneMinder includes limited support for controllable cameras. A number of sample protocols are included and others can easily be added. If you wish to control your cameras via ZoneMinder then select this option otherwise if you only have static cameras or use other control methods then leave this option off. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "111",
                "Name": "ZM_OPT_EMAIL",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Should ZoneMinder email you details of events that match corresponding filters",
                "Help": " In ZoneMinder you can create event filters that specify whether events that match certain criteria should have their details emailed to you at a designated email address. This will allow you to be notified of events as soon as they occur and also to quickly view the events directly. This option specifies whether this functionality should be available. The email created with this option can be any size and is intended to be sent to a regular email reader rather than a mobile device. ",
                "Category": "mail",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "83",
                "Name": "ZM_OPT_FAST_DELETE",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Delete only event database records for speed",
                "Help": " Normally an event created as the result of an alarm consists of entries in one or more database tables plus the various files associated with it. When deleting events in the browser it can take a long time to remove all of this if your are trying to do a lot of events at once. It is recommended that you set this option which means that the browser client only deletes the key entries in the events table, which means the events will no longer appear in the listing, and leaves the zmaudit daemon to clear up the rest later. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "43",
                "Name": "ZM_OPT_FFMPEG",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Is the ffmpeg video encoder\/decoder installed",
                "Help": " ZoneMinder can optionally encode a series of video images into an MPEG encoded movie file for viewing, downloading or storage. This option allows you to specify whether you have the ffmpeg tools installed. Note that creating MPEG files can be fairly CPU and disk intensive and is not a required option as events can still be reviewed as video streams without it. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "140",
                "Name": "ZM_OPT_FRAME_SERVER",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Should analysis farm out the writing of images to disk",
                "Help": " In some circumstances it is possible for a slow disk to take so long writing images to disk that it causes the analysis daemon to fall behind especially during high frame rate events. Setting this option to yes enables a frame server daemon (zmf) which will be sent the images from the analysis daemon and will do the actual writing of images itself freeing up the analysis daemon to get on with other things. Should this transmission fail or other permanent or transient error occur, this function will fall back to the analysis daemon. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "12",
                "Name": "ZM_OPT_GOOG_RECAPTCHA_SECRETKEY",
                "Value": "...Insert your recaptcha secret-key here...",
                "Type": "string",
                "DefaultValue": "...Insert your recaptcha secret-key here...",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Your recaptcha secret-key",
                "Help": " You need to generate your keys from the Google reCaptcha website.  Please refer to https:\/\/www.google.com\/recaptcha\/  for more details. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": "ZM_OPT_USE_GOOG_RECAPTCHA=1"
            }
        },
        {
            "Config": {
                "Id": "11",
                "Name": "ZM_OPT_GOOG_RECAPTCHA_SITEKEY",
                "Value": "...Insert your recaptcha site-key here...",
                "Type": "string",
                "DefaultValue": "...Insert your recaptcha site-key here...",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Your recaptcha site-key",
                "Help": " You need to generate your keys from the Google reCaptcha website.  Please refer to https:\/\/www.google.com\/recaptcha\/  for more details. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": "ZM_OPT_USE_GOOG_RECAPTCHA=1"
            }
        },
        {
            "Config": {
                "Id": "116",
                "Name": "ZM_OPT_MESSAGE",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Should ZoneMinder message you with details of events that match corresponding filters",
                "Help": " In ZoneMinder you can create event filters that specify whether events that match certain criteria should have their details sent to you at a designated short message email address. This will allow you to be notified of events as soon as they occur. This option specifies whether this functionality should be available. The email created by this option will be brief and is intended to be sent to an SMS gateway or a minimal mail reader such as a mobile device or phone rather than a regular email reader. ",
                "Category": "mail",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "36",
                "Name": "ZM_OPT_REMOTE_CAMERAS",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Are you going to use remote\/networked cameras",
                "Help": " ZoneMinder can work with both local cameras, ie. those attached physically to your computer and remote or network cameras. If you will be using networked cameras select this option. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "143",
                "Name": "ZM_OPT_TRIGGERS",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Interface external event triggers via socket or device files",
                "Help": " ZoneMinder can interact with external systems which prompt or cancel alarms. This is done via the zmtrigger.pl script. This option indicates whether you want to use these external triggers. Most people will say no here. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "90",
                "Name": "ZM_OPT_UPLOAD",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Should ZoneMinder support uploading events from filters",
                "Help": " In ZoneMinder you can create event filters that specify whether events that match certain criteria should be uploaded to a remote server for archiving. This option specifies whether this functionality should be available ",
                "Category": "upload",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "9",
                "Name": "ZM_OPT_USE_API",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Enable ZoneMinder APIs",
                "Help": " ZoneMinder now features a new API using which 3rd party applications can interact with ZoneMinder data. It is  STRONGLY recommended that you enable authentication along with APIs. Note that the APIs return sensitive data like Monitor access details which are configured as JSON objects. Which is why we recommend you enabling authentication, especially if you are exposing your ZM instance on the Internet. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "3",
                "Name": "ZM_OPT_USE_AUTH",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Authenticate user logins to ZoneMinder",
                "Help": " ZoneMinder can run in two modes. The simplest is an entirely unauthenticated mode where anyone can access ZoneMinder and perform all tasks. This is most suitable for installations where the web server access is limited in other ways. The other mode enables user accounts with varying sets of permissions. Users must login or authenticate to access ZoneMinder and are limited by their defined permissions. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "10",
                "Name": "ZM_OPT_USE_GOOG_RECAPTCHA",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Add Google reCaptcha to login page",
                "Help": " This option allows you to include a google  reCaptcha validation at login. This means in addition to providing a valid usernane and password, you will also have to  pass the reCaptcha test. Please note that enabling this option results in the zoneminder login page reach out to google servers for captcha validation. Also please note that enabling this option will break 3rd party clients like zmNinja and zmView as they also need to login to ZoneMinder and they will fail the reCaptcha test. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": "ZM_OPT_USE_AUTH=1"
            }
        },
        {
            "Config": {
                "Id": "76",
                "Name": "ZM_OPT_X10",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Support interfacing with X10 devices",
                "Help": " If you have an X10 Home Automation setup in your home you can use ZoneMinder to initiate or react to X10 signals if your computer has the appropriate interface controller. This option indicates whether X10 options will be available in the browser client. ",
                "Category": "x10",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "72",
                "Name": "ZM_PATH_ARP",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "\/absolute\/path\/to\/somewhere",
                "Pattern": "(?^:^((?:\/[^\/]*)+?)\/?$)",
                "Format": " $1 ",
                "Prompt": "Path to a supported ARP tool",
                "Help": " The camera probe function uses Address Resolution Protocol in order to find known devices on the network. Optionally supply the full path to \"ip neigh\", \"arp -a\", or any other tool on your system that returns ip\/mac address pairs. If this field is left empty, ZoneMinder will search for the command \"arp\" and attempt to use that. ",
                "Category": "paths",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "29",
                "Name": "ZM_PATH_CAMBOZOLA",
                "Value": "cambozola.jar",
                "Type": "string",
                "DefaultValue": "cambozola.jar",
                "Hint": "relative\/path\/to\/somewhere",
                "Pattern": "(?^:^((?:[^\/].*)?)\/?$)",
                "Format": " $1 ",
                "Prompt": "Web path to (optional) cambozola java streaming client",
                "Help": " Cambozola is a handy low fat cheese flavoured Java applet that ZoneMinder uses to view image streams on browsers such as Internet Explorer that don't natively support this format. If you use this browser it is highly recommended to install this from http:\/\/www.charliemouse.com\/code\/cambozola\/  however if it is not installed still images at a lower refresh rate can still be viewed. Leave this as 'cambozola.jar' if cambozola is installed in the same directory as the ZoneMinder web client files. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": "ZM_OPT_CAMBOZOLA=1"
            }
        },
        {
            "Config": {
                "Id": "44",
                "Name": "ZM_PATH_FFMPEG",
                "Value": "\/usr\/bin\/ffmpeg",
                "Type": "string",
                "DefaultValue": "\/usr\/bin\/ffmpeg",
                "Hint": "\/absolute\/path\/to\/somewhere",
                "Pattern": "(?^:^((?:\/[^\/]*)+?)\/?$)",
                "Format": " $1 ",
                "Prompt": "Path to (optional) ffmpeg mpeg encoder",
                "Help": "This path should point to where ffmpeg has been installed.",
                "Category": "images",
                "Readonly": "0",
                "Requires": "ZM_OPT_FFMPEG=1"
            }
        },
        {
            "Config": {
                "Id": "70",
                "Name": "ZM_PATH_LOGS",
                "Value": "\/var\/log\/zm",
                "Type": "string",
                "DefaultValue": "\/var\/log\/zm",
                "Hint": "\/absolute\/path\/to\/somewhere",
                "Pattern": "(?^:^((?:\/[^\/]*)+?)\/?$)",
                "Format": " $1 ",
                "Prompt": "Path to the various logs that the ZoneMinder daemons generate",
                "Help": " There are various daemons that are used by ZoneMinder to perform various tasks. Most generate helpful log files and this is where they go. They can be deleted if not required for debugging. ",
                "Category": "paths",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "68",
                "Name": "ZM_PATH_MAP",
                "Value": "\/dev\/shm",
                "Type": "string",
                "DefaultValue": "\/dev\/shm",
                "Hint": "\/absolute\/path\/to\/somewhere",
                "Pattern": "(?^:^((?:\/[^\/]*)+?)\/?$)",
                "Format": " $1 ",
                "Prompt": "Path to the mapped memory files that that ZoneMinder can use",
                "Help": " ZoneMinder has historically used IPC shared memory for shared data between processes. This has it's advantages and limitations. This version of ZoneMinder can use an alternate method, mapped memory, instead with can be enabled with the --enable--mmap directive to configure. This requires less system configuration and is generally more flexible. However it requires each shared data segment to map onto a filesystem file. This option indicates where those mapped files go. You should ensure that this location has sufficient space for these files and for the best performance it should be a tmpfs file system or ramdisk otherwise disk access may render this method slower than the regular shared memory one. ",
                "Category": "paths",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "69",
                "Name": "ZM_PATH_SOCKS",
                "Value": "\/var\/run\/zm",
                "Type": "string",
                "DefaultValue": "\/var\/run\/zm",
                "Hint": "\/absolute\/path\/to\/somewhere",
                "Pattern": "(?^:^((?:\/[^\/]*)+?)\/?$)",
                "Format": " $1 ",
                "Prompt": "Path to the various Unix domain socket files that ZoneMinder uses",
                "Help": " ZoneMinder generally uses Unix domain sockets where possible. This reduces the need for port assignments and prevents external applications from possibly compromising the daemons. However each Unix socket requires a .sock file to be created. This option indicates where those socket files go. ",
                "Category": "paths",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "71",
                "Name": "ZM_PATH_SWAP",
                "Value": "\/tmp\/zm",
                "Type": "string",
                "DefaultValue": "\/tmp\/zm",
                "Hint": "\/absolute\/path\/to\/somewhere",
                "Pattern": "(?^:^((?:\/[^\/]*)+?)\/?$)",
                "Format": " $1 ",
                "Prompt": "Path to location for temporary swap images used in streaming",
                "Help": " Buffered playback requires temporary swap images to be stored for each instance of the streaming daemons. This option determines where these images will be stored. The images will actually be stored in sub directories beneath this location and will be automatically cleaned up after a period of time. ",
                "Category": "paths",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "17",
                "Name": "ZM_PATH_ZMS",
                "Value": "\/zm\/cgi-bin\/nph-zms",
                "Type": "string",
                "DefaultValue": "\/zm\/cgi-bin\/nph-zms",
                "Hint": "relative\/path\/to\/somewhere",
                "Pattern": "(?^:^((?:[^\/].*)?)\/?$)",
                "Format": " $1 ",
                "Prompt": "Web path to zms streaming server",
                "Help": " The ZoneMinder streaming server is required to send streamed images to your browser. It will be installed into the cgi-bin path given at configuration time. This option determines what the web path to the server is rather than the local path on your machine. Ordinarily the streaming server runs in parser-header mode however if you experience problems with streaming you can change this to non-parsed-header (nph) mode by changing 'zms' to 'nph-zms'. ",
                "Category": "paths",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "27",
                "Name": "ZM_RAND_STREAM",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Add a random string to prevent caching of streams",
                "Help": " Some browsers can cache the streams used by ZoneMinder. In order to prevent his a harmless random string can be appended to the url to make each invocation of the stream appear unique. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "66",
                "Name": "ZM_RECORD_DIAG_IMAGES",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Record intermediate alarm diagnostic images, can be very slow",
                "Help": " In addition to recording event statistics you can also record the intermediate diagnostic images that display the results of the various checks and processing that occur when trying to determine if an alarm event has taken place. There are several of these images generated for each frame and zone for each alarm or alert frame so this can have a massive impact on performance. Only switch this setting on for debug or analysis purposes and remember to switch it off again once no longer required. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "65",
                "Name": "ZM_RECORD_EVENT_STATS",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Record event statistical information, switch off if too slow",
                "Help": " This version of ZoneMinder records detailed information about events in the Stats table. This can help in profiling what the optimum settings are for Zones though this is tricky at present. However in future releases this will be done more easily and intuitively, especially with a large sample of events. The default option of 'yes' allows this information to be collected now in readiness for this but if you are concerned about performance you can switch this off in which case no Stats information will be saved. ",
                "Category": "logging",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "30",
                "Name": "ZM_RELOAD_CAMBOZOLA",
                "Value": "0",
                "Type": "integer",
                "DefaultValue": "0",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "After how many seconds should Cambozola be reloaded in live view",
                "Help": " Cambozola allows for the viewing of streaming MJPEG however it caches the entire stream into cache space on the computer, setting this to a number > 0 will cause it to automatically reload after that many seconds to avoid filling up a hard drive. ",
                "Category": "images",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "128",
                "Name": "ZM_RUN_AUDIT",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Run zmaudit to check data consistency",
                "Help": " The zmaudit daemon exists to check that the saved information in the database and on the filesystem match and are consistent with each other. If an error occurs or if you are using 'fast deletes' it may be that database records are deleted but files remain. In this case, and similar, zmaudit will remove redundant information to synchronise the two data stores. This option controls whether zmaudit is run in the background and performs these checks and fixes continuously. This is recommended for most systems however if you have a very large number of events the process of scanning the database and filesystem may take a long time and impact performance. In this case you may prefer to not have zmaudit running unconditionally and schedule occasional checks at other, more convenient, times. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "146",
                "Name": "ZM_SHM_KEY",
                "Value": "0x7a6d0000",
                "Type": "hexadecimal",
                "DefaultValue": "0x7a6d0000",
                "Hint": "hexadecimal",
                "Pattern": "(?^:^(?:0x)?([0-9a-f]{1,8})$)",
                "Format": " \"0x\".$1 ",
                "Prompt": "Shared memory root key to use",
                "Help": " ZoneMinder uses shared memory to speed up communication between modules. To identify the right area to use shared memory keys are used. This option controls what the base key is, each monitor will have it's Id or'ed with this to get the actual key used. You will not normally need to change this value unless it clashes with another instance of ZoneMinder on the same machine. Only the first four hex digits are used, the lower four will be masked out and ignored. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "85",
                "Name": "ZM_SIGNAL_CHECK_POINTS",
                "Value": "10",
                "Type": "integer",
                "DefaultValue": "10",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How many points in a captured image to check for signal loss",
                "Help": " For locally attached video cameras ZoneMinder can check for signal loss by looking at a number of random points on each captured image. If all of these points are set to the same fixed colour then the camera is assumed to have lost signal. When this happens any open events are closed and a short one frame signal loss event is generated, as is another when the signal returns. This option defines how many points on each image to check. Note that this is a maximum, any points found to not have the check colour will abort any further checks so in most cases on a couple of points will actually be checked. Network and file based cameras are never checked. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "0",
                "Name": "ZM_SKIN_DEFAULT",
                "Value": "classic",
                "Type": "string",
                "DefaultValue": "classic",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Default skin used by web interface",
                "Help": " ZoneMinder allows the use of many different web interfaces. This option allows you to set the default skin used by the website. Users can change their skin later, this merely sets the default. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "84",
                "Name": "ZM_STRICT_VIDEO_CONFIG",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Allow errors in setting video config to be fatal",
                "Help": " With some video devices errors can be reported in setting the various video attributes when in fact the operation was successful. Switching this option off will still allow these errors to be reported but will not cause them to kill the video capture daemon. Note however that doing this will cause all errors to be ignored including those which are genuine and which may cause the video capture to not function correctly. Use this option with caution. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "31",
                "Name": "ZM_TIMESTAMP_ON_CAPTURE",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Timestamp images as soon as they are captured",
                "Help": " ZoneMinder can add a timestamp to images in two ways. The default method, when this option is set, is that each image is timestamped immediately when captured and so the image held in memory is marked right away. The second method does not timestamp the images until they are either saved as part of an event or accessed over the web. The timestamp used in both methods will contain the same time as this is preserved along with the image. The first method ensures that an image is timestamped regardless of any other circumstances but will result in all images being timestamped even those never saved or viewed. The second method necessitates that saved images are copied before being saved otherwise two timestamps perhaps at different scales may be applied. This has the (perhaps) desirable side effect that the timestamp is always applied at the same resolution so an image that has scaling applied will still have a legible and correctly scaled timestamp. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "145",
                "Name": "ZM_UPDATE_CHECK_PROXY",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Proxy url if required to access zoneminder.com",
                "Help": " If you use a proxy to access the internet then ZoneMinder needs to know so it can access zoneminder.com to check for updates. If you do use a proxy enter the full proxy url here in the form of http:\/\/<proxy host>:<proxy port>\/ ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "93",
                "Name": "ZM_UPLOAD_ARCH_ANALYSE",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Include the analysis files in the archive",
                "Help": " When the archive files are created they can contain either just the captured frames or both the captured frames and, for frames that caused an alarm, the analysed image with the changed area highlighted. This option controls files are included. Only include analysed frames if you have a high bandwidth connection to the remote server or if you need help in figuring out what caused an alarm in the first place as archives with these files in can be considerably larger. ",
                "Category": "upload",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "92",
                "Name": "ZM_UPLOAD_ARCH_COMPRESS",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Should archive files be compressed",
                "Help": " When the archive files are created they can be compressed. However in general since the images are compressed already this saves only a minimal amount of space versus utilising more CPU in their creation. Only enable if you have CPU to waste and are limited in disk space on your remote server or bandwidth. ",
                "Category": "upload",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "91",
                "Name": "ZM_UPLOAD_ARCH_FORMAT",
                "Value": "tar",
                "Type": "string",
                "DefaultValue": "tar",
                "Hint": "tar|zip",
                "Pattern": "(?^i:^([tz]))",
                "Format": " $1 =~ \/^t\/ ? \"tar\" : \"zip\" ",
                "Prompt": "What format the uploaded events should be created in.",
                "Help": " Uploaded events may be stored in either .tar or .zip format, this option specifies which. Note that to use this you will need to have the Archive::Tar and\/or Archive::Zip perl modules installed. ",
                "Category": "upload",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "110",
                "Name": "ZM_UPLOAD_DEBUG",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Switch upload debugging on",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote server. If you are having (or expecting) troubles with uploading events then setting this to 'yes' permits additional information to be generated by the underlying transfer modules and included in the logs. ",
                "Category": "upload",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "109",
                "Name": "ZM_UPLOAD_FTP_DEBUG",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Switch ftp debugging on",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote ftp server. If you are having (or expecting) troubles with uploading events then setting this to 'yes' permits additional information to be included in the zmfilter log file. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "95",
                "Name": "ZM_UPLOAD_FTP_HOST",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "host.your.domain",
                "Pattern": "(?^:^([a-zA-Z0-9_.-]+)$)",
                "Format": " $1 ",
                "Prompt": "The remote server to upload to",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote ftp server. This option indicates the name, or ip address, of the server to use. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "102",
                "Name": "ZM_UPLOAD_FTP_LOC_DIR",
                "Value": "\/tmp\/zm",
                "Type": "string",
                "DefaultValue": "\/tmp\/zm",
                "Hint": "\/absolute\/path\/to\/somewhere",
                "Pattern": "(?^:^((?:\/[^\/]*)+?)\/?$)",
                "Format": " $1 ",
                "Prompt": "The local directory in which to create upload files",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote ftp server. This option indicates the local directory that ZoneMinder should use for temporary upload files. These are files that are created from events, uploaded and then deleted. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "100",
                "Name": "ZM_UPLOAD_FTP_PASS",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Your ftp password",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote ftp server. This option indicates the password that ZoneMinder should use to log in for ftp transfer. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "108",
                "Name": "ZM_UPLOAD_FTP_PASSIVE",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Use passive ftp when uploading",
                "Help": " If your computer is behind a firewall or proxy you may need to set FTP to passive mode. In fact for simple transfers it makes little sense to do otherwise anyway but you can set this to 'No' if you wish. ",
                "Category": "upload",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "104",
                "Name": "ZM_UPLOAD_FTP_REM_DIR",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "relative\/path\/to\/somewhere",
                "Pattern": "(?^:^((?:[^\/].*)?)\/?$)",
                "Format": " $1 ",
                "Prompt": "The remote directory to upload to",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote ftp server. This option indicates the remote directory that ZoneMinder should use to upload event files to. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "106",
                "Name": "ZM_UPLOAD_FTP_TIMEOUT",
                "Value": "120",
                "Type": "integer",
                "DefaultValue": "120",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How long to allow the transfer to take for each file",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote ftp server. This option indicates the maximum ftp inactivity timeout (in seconds) that should be tolerated before ZoneMinder determines that the transfer has failed and closes down the connection. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "98",
                "Name": "ZM_UPLOAD_FTP_USER",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "alphanumeric",
                "Pattern": "(?^:^([a-zA-Z0-9-_]+)$)",
                "Format": " $1 ",
                "Prompt": "Your ftp username",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote ftp server. This option indicates the username that ZoneMinder should use to log in for ftp transfer. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "96",
                "Name": "ZM_UPLOAD_HOST",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "host.your.domain",
                "Pattern": "(?^:^([a-zA-Z0-9_.-]+)$)",
                "Format": " $1 ",
                "Prompt": "The remote server to upload events to",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote server. This option indicates the name, or ip address, of the server to use. ",
                "Category": "upload",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "103",
                "Name": "ZM_UPLOAD_LOC_DIR",
                "Value": "\/tmp\/zm",
                "Type": "string",
                "DefaultValue": "\/tmp\/zm",
                "Hint": "\/absolute\/path\/to\/somewhere",
                "Pattern": "(?^:^((?:\/[^\/]*)+?)\/?$)",
                "Format": " $1 ",
                "Prompt": "The local directory in which to create upload files",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote server. This option indicates the local directory that ZoneMinder should use for temporary upload files. These are files that are created from events, uploaded and then deleted. ",
                "Category": "upload",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "101",
                "Name": "ZM_UPLOAD_PASS",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "Remote server password",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote server. This option indicates the password that ZoneMinder should use to log in for transfer. If you are using certificate based logins for SFTP servers you can leave this option blank. ",
                "Category": "upload",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "97",
                "Name": "ZM_UPLOAD_PORT",
                "Value": "",
                "Type": "integer",
                "DefaultValue": "",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "The port on the remote upload server, if not the default (SFTP only)",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote server. If you are using the SFTP protocol then this option allows you to specify a particular port to use for connection. If this option is left blank then the default, port 22, is used. This option is ignored for FTP uploads. ",
                "Category": "upload",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "94",
                "Name": "ZM_UPLOAD_PROTOCOL",
                "Value": "ftp",
                "Type": "string",
                "DefaultValue": "ftp",
                "Hint": "ftp|sftp",
                "Pattern": "(?^i:^([tz]))",
                "Format": " $1 =~ \/^f\/ ? \"ftp\" : \"sftp\" ",
                "Prompt": "What protocol to use to upload events",
                "Help": " ZoneMinder can upload events to a remote server using either FTP or SFTP. Regular FTP is widely supported but not necessarily very secure whereas SFTP (Secure FTP) runs over an ssh connection and so is encrypted and uses regular ssh ports. Note that to use this you will need to have the appropriate perl module, either Net::FTP or Net::SFTP installed depending on your choice. ",
                "Category": "upload",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "105",
                "Name": "ZM_UPLOAD_REM_DIR",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "relative\/path\/to\/somewhere",
                "Pattern": "(?^:^((?:[^\/].*)?)\/?$)",
                "Format": " $1 ",
                "Prompt": "The remote directory to upload to",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote server. This option indicates the remote directory that ZoneMinder should use to upload event files to. ",
                "Category": "upload",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "107",
                "Name": "ZM_UPLOAD_TIMEOUT",
                "Value": "120",
                "Type": "integer",
                "DefaultValue": "120",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How long to allow the transfer to take for each file",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote server. This option indicates the maximum inactivity timeout (in seconds) that should be tolerated before ZoneMinder determines that the transfer has failed and closes down the connection. ",
                "Category": "upload",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "99",
                "Name": "ZM_UPLOAD_USER",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "alphanumeric",
                "Pattern": "(?^:^([a-zA-Z0-9-_]+)$)",
                "Format": " $1 ",
                "Prompt": "Remote server username",
                "Help": " You can use filters to instruct ZoneMinder to upload events to a remote server. This option indicates the username that ZoneMinder should use to log in for transfer. ",
                "Category": "upload",
                "Readonly": "0",
                "Requires": "ZM_OPT_UPLOAD=1"
            }
        },
        {
            "Config": {
                "Id": "124",
                "Name": "ZM_URL",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "http:\/\/host.your.domain\/",
                "Pattern": "(?^:^(?:http:\/\/)?(.+)$)",
                "Format": " \"http:\/\/\".$1 ",
                "Prompt": "The URL of your ZoneMinder installation",
                "Help": " The emails or messages that will be sent to you informing you of events can include a link to the events themselves for easy viewing. If you intend to use this feature then set this option to the url of your installation as it would appear from where you read your email, e.g. http:\/\/host.your.domain\/zm.php. ",
                "Category": "mail",
                "Readonly": "0",
                "Requires": "ZM_OPT_EMAIL=1;ZM_OPT_MESSAGE=1"
            }
        },
        {
            "Config": {
                "Id": "139",
                "Name": "ZM_USER_SELF_EDIT",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Allow unprivileged users to change their details",
                "Help": " Ordinarily only users with system edit privilege are able to change users details. Switching this option on allows ordinary users to change their passwords and their language settings ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "14",
                "Name": "ZM_USE_DEEP_STORAGE",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Use a deep filesystem hierarchy for events",
                "Help": " This option is now the default for new ZoneMinder systems and should not be changed. Previous versions of ZoneMinder stored all events for a monitor under one folder. Enabling USE_DEEP_STORAGE causes ZoneMinder to store events under a folder structure that follows year\/month\/day\/hour\/min\/second. Storing events this way avoids the limitation of storing more than 32k files in a single folder inherent in some filesystems. It is important to note that you cannot simply change this option. You must stop zoneminder, enable USE_DEEP_STORAGE, and then run \"sudo zmupdate.pl --migrate-events\". FAILURE TO DO SO WILL RESULT IN LOSS OF YOUR DATA! Consult the ZoneMinder WiKi for further details. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "86",
                "Name": "ZM_V4L_MULTI_BUFFER",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Use more than one buffer for Video 4 Linux devices",
                "Help": " Performance when using Video 4 Linux devices is usually best if multiple buffers are used allowing the next image to be captured while the previous one is being processed. If you have multiple devices on a card sharing one input that requires switching then this approach can sometimes cause frames from one source to be mixed up with frames from another. Switching this option off prevents multi buffering resulting in slower but more stable image capture. This option is ignored for non-local cameras or if only one input is present on a capture chip. This option addresses a similar problem to the ZM_CAPTURES_PER_FRAME option and you should normally change the value of only one of the options at a time.  If you have different capture cards that need different values you can ovveride them in each individual monitor on the source page. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "126",
                "Name": "ZM_WATCH_CHECK_INTERVAL",
                "Value": "10",
                "Type": "integer",
                "DefaultValue": "10",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often to check the capture daemons have not locked up",
                "Help": " The zmwatch daemon checks the image capture performance of the capture daemons to ensure that they have not locked up (rarely a sync error may occur which blocks indefinitely). This option determines how often the daemons are checked. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "127",
                "Name": "ZM_WATCH_MAX_DELAY",
                "Value": "5",
                "Type": "decimal",
                "DefaultValue": "5",
                "Hint": "decimal",
                "Pattern": "(?^:^(d+(?:.d+)?)$)",
                "Format": " $1 ",
                "Prompt": "The maximum delay allowed since the last captured image",
                "Help": " The zmwatch daemon checks the image capture performance of the capture daemons to ensure that they have not locked up (rarely a sync error may occur which blocks indefinitely). This option determines the maximum delay to allow since the last captured frame. The daemon will be restarted if it has not captured any images after this period though the actual restart may take slightly longer in conjunction with the check interval value above. ",
                "Category": "system",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "81",
                "Name": "ZM_WEB_ALARM_SOUND",
                "Value": "",
                "Type": "string",
                "DefaultValue": "",
                "Hint": "filename",
                "Pattern": "(?^:^([a-zA-Z0-9-_.]+)$)",
                "Format": " $1 ",
                "Prompt": "The sound to play on alarm, put this in the sounds directory",
                "Help": " You can specify a sound file to play if an alarm occurs whilst you are watching a live monitor stream. So long as your browser understands the format it does not need to be any particular type. This file should be placed in the sounds directory defined earlier. ",
                "Category": "web",
                "Readonly": "0",
                "Requires": "ZM_WEB_SOUND_ON_ALARM=1"
            }
        },
        {
            "Config": {
                "Id": "82",
                "Name": "ZM_WEB_COMPACT_MONTAGE",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Compact the montage view by removing extra detail",
                "Help": " The montage view shows the output of all of your active monitors in one window. This include a small menu and status information for each one. This can increase the web traffic and make the window larger than may be desired. Setting this option on removes all this extraneous information and just displays the images. ",
                "Category": "web",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "150",
                "Name": "ZM_WEB_EVENTS_PER_PAGE",
                "Value": "100",
                "Type": "integer",
                "DefaultValue": "25",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How many events to list per page in paged mode",
                "Help": " In the event list view you can either list all events or just a page at a time. This option controls how many events are listed per page in paged mode and how often to repeat the column headers in non-paged mode. ",
                "Category": "web",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "148",
                "Name": "ZM_WEB_EVENT_SORT_FIELD",
                "Value": "DateTime",
                "Type": "string",
                "DefaultValue": "DateTime",
                "Hint": "Id|Name|Cause|MonitorName|DateTime|Length|Frames|AlarmFrames|TotScore|AvgScore|MaxScore",
                "Pattern": "(?^:.)",
                "Format": " $1 ",
                "Prompt": "Default field the event lists are sorted by",
                "Help": " Events in lists can be initially ordered in any way you want. This option controls what field is used to sort them. You can modify this ordering from filters or by clicking on headings in the lists themselves. Bear in mind however that the 'Prev' and 'Next' links, when scrolling through events, relate to the ordering in the lists and so not always to time based ordering. ",
                "Category": "web",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "149",
                "Name": "ZM_WEB_EVENT_SORT_ORDER",
                "Value": "asc",
                "Type": "string",
                "DefaultValue": "asc",
                "Hint": "asc|desc",
                "Pattern": "(?^i:^([ad]))",
                "Format": " $1 =~ \/^a\/i ? \"asc\" : \"desc\" ",
                "Prompt": "Default order the event lists are sorted by",
                "Help": " Events in lists can be initially ordered in any way you want. This option controls what order (ascending or descending) is used to sort them. You can modify this ordering from filters or by clicking on headings in the lists themselves. Bear in mind however that the 'Prev' and 'Next' links, when scrolling through events, relate to the ordering in the lists and so not always to time based ordering. ",
                "Category": "web",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "169",
                "Name": "ZM_WEB_H_AJAX_TIMEOUT",
                "Value": "3000",
                "Type": "integer",
                "DefaultValue": "3000",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How long to wait for Ajax request responses (ms)",
                "Help": " The newer versions of the live feed and event views use Ajax to request information from the server and populate the views dynamically. This option allows you to specify a timeout if required after which requests are abandoned. A timeout may be necessary if requests would overwise hang such as on a slow connection. This would tend to consume a lot of browser memory and make the interface unresponsive. Ordinarily no requests should timeout so this setting should be set to a value greater than the slowest expected response. This value is in milliseconds but if set to zero then no timeout will be used. ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "160",
                "Name": "ZM_WEB_H_CAN_STREAM",
                "Value": "auto",
                "Type": "string",
                "DefaultValue": "auto",
                "Hint": "auto|yes|no",
                "Pattern": "(?^i:^([ayn]))",
                "Format": " ($1 =~ \/^y\/)\n                         ? \"yes\"\n                         : ($1 =~ \/^n\/ ? \"no\" : \"auto\" )\n                       ",
                "Prompt": "Override the automatic detection of browser streaming capability",
                "Help": " If you know that your browser can handle image streams of the type 'multipart\/x-mixed-replace' but ZoneMinder does not detect this correctly you can set this option to ensure that the stream is delivered with or without the use of the Cambozola plugin. Selecting 'yes' will tell ZoneMinder that your browser can handle the streams natively, 'no' means that it can't and so the plugin will be used while 'auto' lets ZoneMinder decide. ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "163",
                "Name": "ZM_WEB_H_DEFAULT_RATE",
                "Value": "100",
                "Type": "integer",
                "DefaultValue": "100",
                "Hint": "25|50|100|150|200|400|1000|2500|5000|10000",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the default replay rate factor applied to 'event' views is (%)",
                "Help": " Normally ZoneMinder will display 'event' streams at their native rate, i.e. as close to real-time as possible. However if you have long events it is often convenient to replay them at a faster rate for review. This option lets you specify what the default replay rate will be. It is expressed as a percentage so 100 is normal rate, 200 is double speed etc. ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "162",
                "Name": "ZM_WEB_H_DEFAULT_SCALE",
                "Value": "100",
                "Type": "integer",
                "DefaultValue": "100",
                "Hint": "25|33|50|75|100|150|200|300|400",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the default scaling factor applied to 'live' or 'event' views is (%)",
                "Help": " Normally ZoneMinder will display 'live' or 'event' streams in their native size. However if you have monitors with large dimensions or a slow link you may prefer to reduce this size, alternatively for small monitors you can enlarge it. This options lets you specify what the default scaling factor will be. It is expressed as a percentage so 100 is normal size, 200 is double size etc. ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "167",
                "Name": "ZM_WEB_H_EVENTS_VIEW",
                "Value": "events",
                "Type": "string",
                "DefaultValue": "events",
                "Hint": "events|timeline",
                "Pattern": "(?^i:^([lt]))",
                "Format": " $1 =~ \/^e\/ ? \"events\" : \"timeline\" ",
                "Prompt": "What the default view of multiple events should be.",
                "Help": " Stored events can be viewed in either an events list format or in a timeline based one. This option sets the default view that will be used. Choosing one view here does not prevent the other view being used as it will always be selectable from whichever view is currently being used. ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "156",
                "Name": "ZM_WEB_H_REFRESH_CYCLE",
                "Value": "10",
                "Type": "integer",
                "DefaultValue": "10",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the cycle watch window swaps to the next monitor",
                "Help": " The cycle watch window is a method of continuously cycling between images from all of your monitors. This option determines how often to refresh with a new image. ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "159",
                "Name": "ZM_WEB_H_REFRESH_EVENTS",
                "Value": "5",
                "Type": "integer",
                "DefaultValue": "5",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the event listing is refreshed in the watch window",
                "Help": " The monitor window is actually made from several frames. The lower framme contains a listing of the last few events for easy access. This option determines how often this is refreshed. ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "157",
                "Name": "ZM_WEB_H_REFRESH_IMAGE",
                "Value": "3",
                "Type": "integer",
                "DefaultValue": "3",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the watched image is refreshed (if not streaming)",
                "Help": " The live images from a monitor can be viewed in either streamed or stills mode. This option determines how often a stills image is refreshed, it has no effect if streaming is selected. ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "155",
                "Name": "ZM_WEB_H_REFRESH_MAIN",
                "Value": "60",
                "Type": "integer",
                "DefaultValue": "60",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the main console window should refresh itself",
                "Help": " The main console window lists a general status and the event totals for all monitors. This is not a trivial task and should not be repeated too frequently or it may affect the performance of the rest of the system. ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "158",
                "Name": "ZM_WEB_H_REFRESH_STATUS",
                "Value": "1",
                "Type": "integer",
                "DefaultValue": "1",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the status refreshes itself in the watch window",
                "Help": " The monitor window is actually made from several frames. The one in the middle merely contains a monitor status which needs to refresh fairly frequently to give a true indication. This option determines that frequency. ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "166",
                "Name": "ZM_WEB_H_SCALE_THUMBS",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Scale thumbnails in events, bandwidth versus cpu in rescaling",
                "Help": " If unset, this option sends the whole image to the browser which resizes it in the window. If set the image is scaled down on the server before sending a reduced size image to the browser to conserve bandwidth at the cost of cpu on the server. Note that ZM can only perform the resizing if the appropriate PHP graphics functionality is installed. This is usually available in the php-gd package. ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "168",
                "Name": "ZM_WEB_H_SHOW_PROGRESS",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Show the progress of replay in event view.",
                "Help": " When viewing events an event navigation panel and progress bar is shown below the event itself. This allows you to jump to specific points in the event, but can can also dynamically update to display the current progress of the event replay itself. This progress is calculated from the actual event duration and is not directly linked to the replay itself, so on limited bandwidth connections may be out of step with the replay. This option allows you to turn off the progress display, whilst still keeping the navigation aspect, where bandwidth prevents it functioning effectively. ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "161",
                "Name": "ZM_WEB_H_STREAM_METHOD",
                "Value": "jpeg",
                "Type": "string",
                "DefaultValue": "jpeg",
                "Hint": "mpeg|jpeg",
                "Pattern": "(?^i:^([mj]))",
                "Format": " $1 =~ \/^m\/ ? \"mpeg\" : \"jpeg\" ",
                "Prompt": "Which method should be used to send video streams to your browser.",
                "Help": " ZoneMinder can be configured to use either mpeg encoded video or a series or still jpeg images when sending video streams. This option defines which is used. If you choose mpeg you should ensure that you have the appropriate plugins available on your browser whereas choosing jpeg will work natively on Mozilla and related browsers and with a Java applet on Internet Explorer ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "164",
                "Name": "ZM_WEB_H_VIDEO_BITRATE",
                "Value": "150000",
                "Type": "integer",
                "DefaultValue": "150000",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the bitrate of the video encoded stream should be set to",
                "Help": " When encoding real video via the ffmpeg library a bit rate can be specified which roughly corresponds to the available bandwidth used for the stream. This setting effectively corresponds to a 'quality' setting for the video. A low value will result in a blocky image whereas a high value will produce a clearer view. Note that this setting does not control the frame rate of the video however the quality of the video produced is affected both by this setting and the frame rate that the video is produced at. A higher frame rate at a particular bit rate result in individual frames being at a lower quality. ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "165",
                "Name": "ZM_WEB_H_VIDEO_MAXFPS",
                "Value": "30",
                "Type": "integer",
                "DefaultValue": "30",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the maximum frame rate for streamed video should be",
                "Help": " When using streamed video the main control is the bitrate which determines how much data can be transmitted. However a lower bitrate at high frame rates results in a lower quality image. This option allows you to limit the maximum frame rate to ensure that video quality is maintained. An additional advantage is that encoding video at high frame rates is a processor intensive task when for the most part a very high frame rate offers little perceptible improvement over one that has a more manageable resource requirement. Note, this option is implemented as a cap beyond which binary reduction takes place. So if you have a device capturing at 15fps and set this option to 10fps then the video is not produced at 10fps, but rather at 7.5fps (15 divided by 2) as the final frame rate must be the original divided by a power of 2. ",
                "Category": "highband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "151",
                "Name": "ZM_WEB_LIST_THUMBS",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Display mini-thumbnails of event images in event lists",
                "Help": " Ordinarily the event lists just display text details of the events to save space and time. By switching this option on you can also display small thumbnails to help you identify events of interest. The size of these thumbnails is controlled by the following two options. ",
                "Category": "web",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "153",
                "Name": "ZM_WEB_LIST_THUMB_HEIGHT",
                "Value": "0",
                "Type": "integer",
                "DefaultValue": "0",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "The height of the thumbnails that appear in the event lists",
                "Help": " This options controls the height of the thumbnail images that appear in the event lists. It should be fairly small to fit in with the rest of the table. If you prefer you can specify a width instead in the previous option but you should only use one of the width or height and the other option should be set to zero. If both width and height are specified then width will be used and height ignored. ",
                "Category": "web",
                "Readonly": "0",
                "Requires": "ZM_WEB_LIST_THUMBS=1"
            }
        },
        {
            "Config": {
                "Id": "152",
                "Name": "ZM_WEB_LIST_THUMB_WIDTH",
                "Value": "48",
                "Type": "integer",
                "DefaultValue": "48",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "The width of the thumbnails that appear in the event lists",
                "Help": " This options controls the width of the thumbnail images that appear in the event lists. It should be fairly small to fit in with the rest of the table. If you prefer you can specify a height instead in the next option but you should only use one of the width or height and the other option should be set to zero. If both width and height are specified then width will be used and height ignored. ",
                "Category": "web",
                "Readonly": "0",
                "Requires": "ZM_WEB_LIST_THUMBS=1"
            }
        },
        {
            "Config": {
                "Id": "199",
                "Name": "ZM_WEB_L_AJAX_TIMEOUT",
                "Value": "10000",
                "Type": "integer",
                "DefaultValue": "10000",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How long to wait for Ajax request responses (ms)",
                "Help": " The newer versions of the live feed and event views use Ajax to request information from the server and populate the views dynamically. This option allows you to specify a timeout if required after which requests are abandoned. A timeout may be necessary if requests would overwise hang such as on a slow connection. This would tend to consume a lot of browser memory and make the interface unresponsive. Ordinarily no requests should timeout so this setting should be set to a value greater than the slowest expected response. This value is in milliseconds but if set to zero then no timeout will be used. ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "190",
                "Name": "ZM_WEB_L_CAN_STREAM",
                "Value": "auto",
                "Type": "string",
                "DefaultValue": "auto",
                "Hint": "auto|yes|no",
                "Pattern": "(?^i:^([ayn]))",
                "Format": " ($1 =~ \/^y\/)\n                         ? \"yes\"\n                         : ($1 =~ \/^n\/ ? \"no\" : \"auto\" )\n                       ",
                "Prompt": "Override the automatic detection of browser streaming capability",
                "Help": " If you know that your browser can handle image streams of the type 'multipart\/x-mixed-replace' but ZoneMinder does not detect this correctly you can set this option to ensure that the stream is delivered with or without the use of the Cambozola plugin. Selecting 'yes' will tell ZoneMinder that your browser can handle the streams natively, 'no' means that it can't and so the plugin will be used while 'auto' lets ZoneMinder decide. ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "193",
                "Name": "ZM_WEB_L_DEFAULT_RATE",
                "Value": "100",
                "Type": "integer",
                "DefaultValue": "100",
                "Hint": "25|50|100|150|200|400|1000|2500|5000|10000",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the default replay rate factor applied to 'event' views is (%)",
                "Help": " Normally ZoneMinder will display 'event' streams at their native rate, i.e. as close to real-time as possible. However if you have long events it is often convenient to replay them at a faster rate for review. This option lets you specify what the default replay rate will be. It is expressed as a percentage so 100 is normal rate, 200 is double speed etc. ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "192",
                "Name": "ZM_WEB_L_DEFAULT_SCALE",
                "Value": "100",
                "Type": "integer",
                "DefaultValue": "100",
                "Hint": "25|33|50|75|100|150|200|300|400",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the default scaling factor applied to 'live' or 'event' views is (%)",
                "Help": " Normally ZoneMinder will display 'live' or 'event' streams in their native size. However if you have monitors with large dimensions or a slow link you may prefer to reduce this size, alternatively for small monitors you can enlarge it. This options lets you specify what the default scaling factor will be. It is expressed as a percentage so 100 is normal size, 200 is double size etc. ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "197",
                "Name": "ZM_WEB_L_EVENTS_VIEW",
                "Value": "events",
                "Type": "string",
                "DefaultValue": "events",
                "Hint": "events|timeline",
                "Pattern": "(?^i:^([lt]))",
                "Format": " $1 =~ \/^e\/ ? \"events\" : \"timeline\" ",
                "Prompt": "What the default view of multiple events should be.",
                "Help": " Stored events can be viewed in either an events list format or in a timeline based one. This option sets the default view that will be used. Choosing one view here does not prevent the other view being used as it will always be selectable from whichever view is currently being used. ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "186",
                "Name": "ZM_WEB_L_REFRESH_CYCLE",
                "Value": "30",
                "Type": "integer",
                "DefaultValue": "30",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the cycle watch window swaps to the next monitor",
                "Help": " The cycle watch window is a method of continuously cycling between images from all of your monitors. This option determines how often to refresh with a new image. ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "189",
                "Name": "ZM_WEB_L_REFRESH_EVENTS",
                "Value": "180",
                "Type": "integer",
                "DefaultValue": "180",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the event listing is refreshed in the watch window",
                "Help": " The monitor window is actually made from several frames. The lower framme contains a listing of the last few events for easy access. This option determines how often this is refreshed. ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "187",
                "Name": "ZM_WEB_L_REFRESH_IMAGE",
                "Value": "15",
                "Type": "integer",
                "DefaultValue": "15",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the watched image is refreshed (if not streaming)",
                "Help": " The live images from a monitor can be viewed in either streamed or stills mode. This option determines how often a stills image is refreshed, it has no effect if streaming is selected. ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "185",
                "Name": "ZM_WEB_L_REFRESH_MAIN",
                "Value": "300",
                "Type": "integer",
                "DefaultValue": "300",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the main console window should refresh itself",
                "Help": " The main console window lists a general status and the event totals for all monitors. This is not a trivial task and should not be repeated too frequently or it may affect the performance of the rest of the system. ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "188",
                "Name": "ZM_WEB_L_REFRESH_STATUS",
                "Value": "10",
                "Type": "integer",
                "DefaultValue": "10",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the status refreshes itself in the watch window",
                "Help": " The monitor window is actually made from several frames. The one in the middle merely contains a monitor status which needs to refresh fairly frequently to give a true indication. This option determines that frequency. ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "196",
                "Name": "ZM_WEB_L_SCALE_THUMBS",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Scale thumbnails in events, bandwidth versus cpu in rescaling",
                "Help": " If unset, this option sends the whole image to the browser which resizes it in the window. If set the image is scaled down on the server before sending a reduced size image to the browser to conserve bandwidth at the cost of cpu on the server. Note that ZM can only perform the resizing if the appropriate PHP graphics functionality is installed. This is usually available in the php-gd package. ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "198",
                "Name": "ZM_WEB_L_SHOW_PROGRESS",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Show the progress of replay in event view.",
                "Help": " When viewing events an event navigation panel and progress bar is shown below the event itself. This allows you to jump to specific points in the event, but can can also dynamically update to display the current progress of the event replay itself. This progress is calculated from the actual event duration and is not directly linked to the replay itself, so on limited bandwidth connections may be out of step with the replay. This option allows you to turn off the progress display, whilst still keeping the navigation aspect, where bandwidth prevents it functioning effectively. ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "191",
                "Name": "ZM_WEB_L_STREAM_METHOD",
                "Value": "jpeg",
                "Type": "string",
                "DefaultValue": "jpeg",
                "Hint": "mpeg|jpeg",
                "Pattern": "(?^i:^([mj]))",
                "Format": " $1 =~ \/^m\/ ? \"mpeg\" : \"jpeg\" ",
                "Prompt": "Which method should be used to send video streams to your browser.",
                "Help": " ZoneMinder can be configured to use either mpeg encoded video or a series or still jpeg images when sending video streams. This option defines which is used. If you choose mpeg you should ensure that you have the appropriate plugins available on your browser whereas choosing jpeg will work natively on Mozilla and related browsers and with a Java applet on Internet Explorer ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "194",
                "Name": "ZM_WEB_L_VIDEO_BITRATE",
                "Value": "25000",
                "Type": "integer",
                "DefaultValue": "25000",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the bitrate of the video encoded stream should be set to",
                "Help": " When encoding real video via the ffmpeg library a bit rate can be specified which roughly corresponds to the available bandwidth used for the stream. This setting effectively corresponds to a 'quality' setting for the video. A low value will result in a blocky image whereas a high value will produce a clearer view. Note that this setting does not control the frame rate of the video however the quality of the video produced is affected both by this setting and the frame rate that the video is produced at. A higher frame rate at a particular bit rate result in individual frames being at a lower quality. ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "195",
                "Name": "ZM_WEB_L_VIDEO_MAXFPS",
                "Value": "5",
                "Type": "integer",
                "DefaultValue": "5",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the maximum frame rate for streamed video should be",
                "Help": " When using streamed video the main control is the bitrate which determines how much data can be transmitted. However a lower bitrate at high frame rates results in a lower quality image. This option allows you to limit the maximum frame rate to ensure that video quality is maintained. An additional advantage is that encoding video at high frame rates is a processor intensive task when for the most part a very high frame rate offers little perceptible improvement over one that has a more manageable resource requirement. Note, this option is implemented as a cap beyond which binary reduction takes place. So if you have a device capturing at 15fps and set this option to 10fps then the video is not produced at 10fps, but rather at 7.5fps (15 divided by 2) as the final frame rate must be the original divided by a power of 2. ",
                "Category": "lowband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "184",
                "Name": "ZM_WEB_M_AJAX_TIMEOUT",
                "Value": "5000",
                "Type": "integer",
                "DefaultValue": "5000",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How long to wait for Ajax request responses (ms)",
                "Help": " The newer versions of the live feed and event views use Ajax to request information from the server and populate the views dynamically. This option allows you to specify a timeout if required after which requests are abandoned. A timeout may be necessary if requests would overwise hang such as on a slow connection. This would tend to consume a lot of browser memory and make the interface unresponsive. Ordinarily no requests should timeout so this setting should be set to a value greater than the slowest expected response. This value is in milliseconds but if set to zero then no timeout will be used. ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "175",
                "Name": "ZM_WEB_M_CAN_STREAM",
                "Value": "auto",
                "Type": "string",
                "DefaultValue": "auto",
                "Hint": "auto|yes|no",
                "Pattern": "(?^i:^([ayn]))",
                "Format": " ($1 =~ \/^y\/)\n                         ? \"yes\"\n                         : ($1 =~ \/^n\/ ? \"no\" : \"auto\" )\n                       ",
                "Prompt": "Override the automatic detection of browser streaming capability",
                "Help": " If you know that your browser can handle image streams of the type 'multipart\/x-mixed-replace' but ZoneMinder does not detect this correctly you can set this option to ensure that the stream is delivered with or without the use of the Cambozola plugin. Selecting 'yes' will tell ZoneMinder that your browser can handle the streams natively, 'no' means that it can't and so the plugin will be used while 'auto' lets ZoneMinder decide. ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "178",
                "Name": "ZM_WEB_M_DEFAULT_RATE",
                "Value": "100",
                "Type": "integer",
                "DefaultValue": "100",
                "Hint": "25|50|100|150|200|400|1000|2500|5000|10000",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the default replay rate factor applied to 'event' views is (%)",
                "Help": " Normally ZoneMinder will display 'event' streams at their native rate, i.e. as close to real-time as possible. However if you have long events it is often convenient to replay them at a faster rate for review. This option lets you specify what the default replay rate will be. It is expressed as a percentage so 100 is normal rate, 200 is double speed etc. ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "177",
                "Name": "ZM_WEB_M_DEFAULT_SCALE",
                "Value": "100",
                "Type": "integer",
                "DefaultValue": "100",
                "Hint": "25|33|50|75|100|150|200|300|400",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the default scaling factor applied to 'live' or 'event' views is (%)",
                "Help": " Normally ZoneMinder will display 'live' or 'event' streams in their native size. However if you have monitors with large dimensions or a slow link you may prefer to reduce this size, alternatively for small monitors you can enlarge it. This options lets you specify what the default scaling factor will be. It is expressed as a percentage so 100 is normal size, 200 is double size etc. ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "182",
                "Name": "ZM_WEB_M_EVENTS_VIEW",
                "Value": "events",
                "Type": "string",
                "DefaultValue": "events",
                "Hint": "events|timeline",
                "Pattern": "(?^i:^([lt]))",
                "Format": " $1 =~ \/^e\/ ? \"events\" : \"timeline\" ",
                "Prompt": "What the default view of multiple events should be.",
                "Help": " Stored events can be viewed in either an events list format or in a timeline based one. This option sets the default view that will be used. Choosing one view here does not prevent the other view being used as it will always be selectable from whichever view is currently being used. ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "171",
                "Name": "ZM_WEB_M_REFRESH_CYCLE",
                "Value": "20",
                "Type": "integer",
                "DefaultValue": "20",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the cycle watch window swaps to the next monitor",
                "Help": " The cycle watch window is a method of continuously cycling between images from all of your monitors. This option determines how often to refresh with a new image. ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "174",
                "Name": "ZM_WEB_M_REFRESH_EVENTS",
                "Value": "60",
                "Type": "integer",
                "DefaultValue": "60",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the event listing is refreshed in the watch window",
                "Help": " The monitor window is actually made from several frames. The lower framme contains a listing of the last few events for easy access. This option determines how often this is refreshed. ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "172",
                "Name": "ZM_WEB_M_REFRESH_IMAGE",
                "Value": "10",
                "Type": "integer",
                "DefaultValue": "10",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the watched image is refreshed (if not streaming)",
                "Help": " The live images from a monitor can be viewed in either streamed or stills mode. This option determines how often a stills image is refreshed, it has no effect if streaming is selected. ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "170",
                "Name": "ZM_WEB_M_REFRESH_MAIN",
                "Value": "300",
                "Type": "integer",
                "DefaultValue": "300",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the main console window should refresh itself",
                "Help": " The main console window lists a general status and the event totals for all monitors. This is not a trivial task and should not be repeated too frequently or it may affect the performance of the rest of the system. ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "173",
                "Name": "ZM_WEB_M_REFRESH_STATUS",
                "Value": "5",
                "Type": "integer",
                "DefaultValue": "5",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the status refreshes itself in the watch window",
                "Help": " The monitor window is actually made from several frames. The one in the middle merely contains a monitor status which needs to refresh fairly frequently to give a true indication. This option determines that frequency. ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "181",
                "Name": "ZM_WEB_M_SCALE_THUMBS",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Scale thumbnails in events, bandwidth versus cpu in rescaling",
                "Help": " If unset, this option sends the whole image to the browser which resizes it in the window. If set the image is scaled down on the server before sending a reduced size image to the browser to conserve bandwidth at the cost of cpu on the server. Note that ZM can only perform the resizing if the appropriate PHP graphics functionality is installed. This is usually available in the php-gd package. ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "183",
                "Name": "ZM_WEB_M_SHOW_PROGRESS",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Show the progress of replay in event view.",
                "Help": " When viewing events an event navigation panel and progress bar is shown below the event itself. This allows you to jump to specific points in the event, but can can also dynamically update to display the current progress of the event replay itself. This progress is calculated from the actual event duration and is not directly linked to the replay itself, so on limited bandwidth connections may be out of step with the replay. This option allows you to turn off the progress display, whilst still keeping the navigation aspect, where bandwidth prevents it functioning effectively. ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "176",
                "Name": "ZM_WEB_M_STREAM_METHOD",
                "Value": "jpeg",
                "Type": "string",
                "DefaultValue": "jpeg",
                "Hint": "mpeg|jpeg",
                "Pattern": "(?^i:^([mj]))",
                "Format": " $1 =~ \/^m\/ ? \"mpeg\" : \"jpeg\" ",
                "Prompt": "Which method should be used to send video streams to your browser.",
                "Help": " ZoneMinder can be configured to use either mpeg encoded video or a series or still jpeg images when sending video streams. This option defines which is used. If you choose mpeg you should ensure that you have the appropriate plugins available on your browser whereas choosing jpeg will work natively on Mozilla and related browsers and with a Java applet on Internet Explorer ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "179",
                "Name": "ZM_WEB_M_VIDEO_BITRATE",
                "Value": "75000",
                "Type": "integer",
                "DefaultValue": "75000",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the bitrate of the video encoded stream should be set to",
                "Help": " When encoding real video via the ffmpeg library a bit rate can be specified which roughly corresponds to the available bandwidth used for the stream. This setting effectively corresponds to a 'quality' setting for the video. A low value will result in a blocky image whereas a high value will produce a clearer view. Note that this setting does not control the frame rate of the video however the quality of the video produced is affected both by this setting and the frame rate that the video is produced at. A higher frame rate at a particular bit rate result in individual frames being at a lower quality. ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "180",
                "Name": "ZM_WEB_M_VIDEO_MAXFPS",
                "Value": "10",
                "Type": "integer",
                "DefaultValue": "10",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the maximum frame rate for streamed video should be",
                "Help": " When using streamed video the main control is the bitrate which determines how much data can be transmitted. However a lower bitrate at high frame rates results in a lower quality image. This option allows you to limit the maximum frame rate to ensure that video quality is maintained. An additional advantage is that encoding video at high frame rates is a processor intensive task when for the most part a very high frame rate offers little perceptible improvement over one that has a more manageable resource requirement. Note, this option is implemented as a cap beyond which binary reduction takes place. So if you have a device capturing at 15fps and set this option to 10fps then the video is not produced at 10fps, but rather at 7.5fps (15 divided by 2) as the final frame rate must be the original divided by a power of 2. ",
                "Category": "medband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "75",
                "Name": "ZM_WEB_POPUP_ON_ALARM",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Should the monitor window jump to the top if an alarm occurs",
                "Help": " When viewing a live monitor stream you can specify whether you want the window to pop to the front if an alarm occurs when the window is minimised or behind another window. This is most useful if your monitors are over doors for example when they can pop up if someone comes to the doorway. ",
                "Category": "web",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "207",
                "Name": "ZM_WEB_P_AJAX_TIMEOUT",
                "Value": "10000",
                "Type": "integer",
                "DefaultValue": "10000",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How long to wait for Ajax request responses (ms)",
                "Help": " The newer versions of the live feed and event views use Ajax to request information from the server and populate the views dynamically. This option allows you to specify a timeout if required after which requests are abandoned. A timeout may be necessary if requests would overwise hang such as on a slow connection. This would tend to consume a lot of browser memory and make the interface unresponsive. Ordinarily no requests should timeout so this setting should be set to a value greater than the slowest expected response. This value is in milliseconds but if set to zero then no timeout will be used. ",
                "Category": "phoneband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "200",
                "Name": "ZM_WEB_P_CAN_STREAM",
                "Value": "auto",
                "Type": "string",
                "DefaultValue": "auto",
                "Hint": "auto|yes|no",
                "Pattern": "(?^i:^([ayn]))",
                "Format": " ($1 =~ \/^y\/)\n                         ? \"yes\"\n                         : ($1 =~ \/^n\/ ? \"no\" : \"auto\" )\n                       ",
                "Prompt": "Override the automatic detection of browser streaming capability",
                "Help": " If you know that your browser can handle image streams of the type 'multipart\/x-mixed-replace' but ZoneMinder does not detect this correctly you can set this option to ensure that the stream is delivered with or without the use of the Cambozola plugin. Selecting 'yes' will tell ZoneMinder that your browser can handle the streams natively, 'no' means that it can't and so the plugin will be used while 'auto' lets ZoneMinder decide. ",
                "Category": "phoneband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "203",
                "Name": "ZM_WEB_P_DEFAULT_RATE",
                "Value": "100",
                "Type": "integer",
                "DefaultValue": "100",
                "Hint": "25|50|100|150|200|400|1000|2500|5000|10000",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the default replay rate factor applied to 'event' views is (%)",
                "Help": " Normally ZoneMinder will display 'event' streams at their native rate, i.e. as close to real-time as possible. However if you have long events it is often convenient to replay them at a faster rate for review. This option lets you specify what the default replay rate will be. It is expressed as a percentage so 100 is normal rate, 200 is double speed etc. ",
                "Category": "phoneband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "202",
                "Name": "ZM_WEB_P_DEFAULT_SCALE",
                "Value": "100",
                "Type": "integer",
                "DefaultValue": "100",
                "Hint": "25|33|50|75|100|150|200|300|400",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the default scaling factor applied to 'live' or 'event' views is (%)",
                "Help": " Normally ZoneMinder will display 'live' or 'event' streams in their native size. However if you have monitors with large dimensions or a slow link you may prefer to reduce this size, alternatively for small monitors you can enlarge it. This options lets you specify what the default scaling factor will be. It is expressed as a percentage so 100 is normal size, 200 is double size etc. ",
                "Category": "phoneband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "206",
                "Name": "ZM_WEB_P_SCALE_THUMBS",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Scale thumbnails in events, bandwidth versus cpu in rescaling",
                "Help": " If unset, this option sends the whole image to the browser which resizes it in the window. If set the image is scaled down on the server before sending a reduced size image to the browser to conserve bandwidth at the cost of cpu on the server. Note that ZM can only perform the resizing if the appropriate PHP graphics functionality is installed. This is usually available in the php-gd package. ",
                "Category": "phoneband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "201",
                "Name": "ZM_WEB_P_STREAM_METHOD",
                "Value": "jpeg",
                "Type": "string",
                "DefaultValue": "jpeg",
                "Hint": "mpeg|jpeg",
                "Pattern": "(?^i:^([mj]))",
                "Format": " $1 =~ \/^m\/ ? \"mpeg\" : \"jpeg\" ",
                "Prompt": "Which method should be used to send video streams to your browser.",
                "Help": " ZoneMinder can be configured to use either mpeg encoded video or a series or still jpeg images when sending video streams. This option defines which is used. If you choose mpeg you should ensure that you have the appropriate plugins available on your browser whereas choosing jpeg will work natively on Mozilla and related browsers and with a Java applet on Internet Explorer ",
                "Category": "phoneband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "204",
                "Name": "ZM_WEB_P_VIDEO_BITRATE",
                "Value": "8000",
                "Type": "integer",
                "DefaultValue": "8000",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the bitrate of the video encoded stream should be set to",
                "Help": " When encoding real video via the ffmpeg library a bit rate can be specified which roughly corresponds to the available bandwidth used for the stream. This setting effectively corresponds to a 'quality' setting for the video. A low value will result in a blocky image whereas a high value will produce a clearer view. Note that this setting does not control the frame rate of the video however the quality of the video produced is affected both by this setting and the frame rate that the video is produced at. A higher frame rate at a particular bit rate result in individual frames being at a lower quality. ",
                "Category": "phoneband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "205",
                "Name": "ZM_WEB_P_VIDEO_MAXFPS",
                "Value": "5",
                "Type": "integer",
                "DefaultValue": "5",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "What the maximum frame rate for streamed video should be",
                "Help": " When using streamed video the main control is the bitrate which determines how much data can be transmitted. However a lower bitrate at high frame rates results in a lower quality image. This option allows you to limit the maximum frame rate to ensure that video quality is maintained. An additional advantage is that encoding video at high frame rates is a processor intensive task when for the most part a very high frame rate offers little perceptible improvement over one that has a more manageable resource requirement. Note, this option is implemented as a cap beyond which binary reduction takes place. So if you have a device capturing at 15fps and set this option to 10fps then the video is not produced at 10fps, but rather at 7.5fps (15 divided by 2) as the final frame rate must be the original divided by a power of 2. ",
                "Category": "phoneband",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "147",
                "Name": "ZM_WEB_REFRESH_METHOD",
                "Value": "javascript",
                "Type": "string",
                "DefaultValue": "javascript",
                "Hint": "javascript|http",
                "Pattern": "(?^i:^([jh]))",
                "Format": " $1 =~ \/^j\/\n                             ? \"javascript\"\n                             : \"http\"\n                           ",
                "Prompt": "What method windows should use to refresh themselves",
                "Help": " Many windows in Javascript need to refresh themselves to keep their information current. This option determines what method they should use to do this. Choosing 'javascript' means that each window will have a short JavaScript statement in with a timer to prompt the refresh. This is the most compatible method. Choosing 'http' means the refresh instruction is put in the HTTP header. This is a cleaner method but refreshes are interrupted or cancelled when a link in the window is clicked meaning that the window will no longer refresh and this would have to be done manually. ",
                "Category": "hidden",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "74",
                "Name": "ZM_WEB_RESIZE_CONSOLE",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Should the console window resize itself to fit",
                "Help": " Traditionally the main ZoneMinder web console window has resized itself to shrink to a size small enough to list only the monitors that are actually present. This is intended to make the window more unobtrusize but may not be to everyones tastes, especially if opened in a tab in browsers which support this kind if layout. Switch this option off to have the console window size left to the users preference ",
                "Category": "web",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "80",
                "Name": "ZM_WEB_SOUND_ON_ALARM",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Should the monitor window play a sound if an alarm occurs",
                "Help": " When viewing a live monitor stream you can specify whether you want the window to play a sound to alert you if an alarm occurs. ",
                "Category": "web",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "73",
                "Name": "ZM_WEB_TITLE_PREFIX",
                "Value": "ZM",
                "Type": "string",
                "DefaultValue": "ZM",
                "Hint": "string",
                "Pattern": "(?^:^(.+)$)",
                "Format": " $1 ",
                "Prompt": "The title prefix displayed on each window",
                "Help": " If you have more than one installation of ZoneMinder it can be helpful to display different titles for each one. Changing this option allows you to customise the window titles to include further information to aid identification. ",
                "Category": "web",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "154",
                "Name": "ZM_WEB_USE_OBJECT_TAGS",
                "Value": "1",
                "Type": "boolean",
                "DefaultValue": "yes",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Wrap embed in object tags for media content",
                "Help": " There are two methods of including media content in web pages. The most common way is use the EMBED tag which is able to give some indication of the type of content. However this is not a standard part of HTML. The official method is to use OBJECT tags which are able to give more information allowing the correct media viewers etc to be loaded. However these are less widely supported and content may be specifically tailored to a particular platform or player. This option controls whether media content is enclosed in EMBED tags only or whether, where appropriate, it is additionally wrapped in OBJECT tags. Currently OBJECT tags are only used in a limited number of circumstances but they may become more widespread in the future. It is suggested that you leave this option on unless you encounter problems playing some content. ",
                "Category": "web",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "136",
                "Name": "ZM_WEIGHTED_ALARM_CENTRES",
                "Value": "0",
                "Type": "boolean",
                "DefaultValue": "no",
                "Hint": "yes|no",
                "Pattern": "(?^i:^([yn]))",
                "Format": " ($1 =~ \/^y\/)\n                          ? \"yes\"\n                          : \"no\"\n                       ",
                "Prompt": "Use a weighted algorithm to calculate the centre of an alarm",
                "Help": " ZoneMinder will always calculate the centre point of an alarm in a zone to give some indication of where on the screen it is. This can be used by the experimental motion tracking feature or your own custom extensions. In the alarmed or filtered pixels mode this is a simple midpoint between the extents of the detected pxiesl. However in the blob method this can instead be calculated using weighted pixel locations to give more accurate positioning for irregularly shaped blobs. This method, while more precise is also slower and so is turned off by default. ",
                "Category": "config",
                "Readonly": "0",
                "Requires": ""
            }
        },
        {
            "Config": {
                "Id": "79",
                "Name": "ZM_X10_DB_RELOAD_INTERVAL",
                "Value": "60",
                "Type": "integer",
                "DefaultValue": "60",
                "Hint": "integer",
                "Pattern": "(?^:^(d+)$)",
                "Format": " $1 ",
                "Prompt": "How often (in seconds) the X10 daemon reloads the monitors from the database",
                "Help": " The zmx10 daemon periodically checks the database to find out what X10 events trigger, or result from, alarms. This option determines how frequently this check occurs, unless you change this area frequently this can be a fairly large value. ",
                "Category": "x10",
                "Readonly": "0",
                "Requires": "ZM_OPT_X10=1"
            }
        },
        {
            "Config": {
                "Id": "77",
                "Name": "ZM_X10_DEVICE",
                "Value": "\/dev\/ttyS0",
                "Type": "string",
                "DefaultValue": "\/dev\/ttyS0",
                "Hint": "\/absolute\/path\/to\/somewhere",
                "Pattern": "(?^:^((?:\/[^\/]*)+?)\/?$)",
                "Format": " $1 ",
                "Prompt": "What device is your X10 controller connected on",
                "Help": " If you have an X10 controller device (e.g. XM10U) connected to your computer this option details which port it is connected on, the default of \/dev\/ttyS0 maps to serial or com port 1. ",
                "Category": "x10",
                "Readonly": "0",
                "Requires": "ZM_OPT_X10=1"
            }
        },
        {
            "Config": {
                "Id": "78",
                "Name": "ZM_X10_HOUSE_CODE",
                "Value": "A",
                "Type": "string",
                "DefaultValue": "A",
                "Hint": "A-P",
                "Pattern": "(?^i:^([A-P]))",
                "Format": " uc($1) ",
                "Prompt": "What X10 house code should be used",
                "Help": " X10 devices are grouped together by identifying them as all belonging to one House Code. This option details what that is. It should be a single letter between A and P. ",
                "Category": "x10",
                "Readonly": "0",
                "Requires": "ZM_OPT_X10=1"
            }
        }
    ]
}